<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V4.3//EN"
	"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>

<book>
  <bookinfo>
    <title>OpenAFS for Windows Release Notes</title>
    <copyright>
      <year>2003-2009</year>
      <holder>Secure Endpoints Inc.</holder>
    </copyright>
    <legalnotice>
      <para>This documentation is covered by the MIT License.</para>
    </legalnotice>
    <revhistory>
        &version;
    </revhistory>
    <abstract>
      <para>This document provides a series of usage notes regarding the OpenAFS for Windows
      client, supported platforms, contribution information, debugging techniques, and 
      a reference to supported Windows registry values.
     </para>
    </abstract>
  </bookinfo>
  <preface>
    <title id='Preface'>Preface</title>

    <para>The Andrew File System (AFS) is a location-independent file system that uses a local cache to increase its performance.  An AFS client accesses files anonymously or via a Kerberos authentication.  The global AFS is partitioned into cells.  The AFS cell is a collection of AFS volumes that are administered by a common entity.   AFS cells can be administered by a department even when the Kerberos realm used for local authentication is managed by a much larger organization.  AFS clients and servers take advantage of Kerberos cross realm authentication to enable authenticated access by entities located outside the local realm.  Authorization is enforced by the use of directory level access control lists which can consist of individual or group identities.  </para>
    <para>The AFS volume is a tree of files and sub-directories.  AFS volumes are created by administrators and are joined to an AFS cell via the use of a mount point.   Once a volume is created, users can create files and directories as well as mount points and symlinks within the volume without regard for the physical location of the volume.  Administrators can move the volume to another server as necessary without the need to notify users.   In fact, the volume move can occur while files in the volume are in use.  </para>
    <para>AFS volumes can be replicated to read-only copies.   When accessing files from a read-only replica, clients will read all of the data from a single replica.   If that replica becomes unavailable, the clients will failover to any replica that is reachable.  Users of the data are unaware of where the replicas are stored or which one is being accessed.   The contents of the replicas can be updated at any time by
      <emphasis>releasing</emphasis> the current contents of the source volume.
  
    
    
    </para>
    <para>OpenAFS for Windows (OAFW) provides AFS client access Microsoft Windows operating systems.  It strives to maintain transparency such that the user is unaware of the distinction between the use of AFS and Microsoft Windows file shares.   OAFW can be part of a single sign-on solution by allowing credentials for a Kerberos principal to be obtained at logon and for that principal to be used to obtain AFS tokens for one or more cells.   Although OAFW is implemented as a locally installed SMB to AFS gateway, OAFW maintains the portability of file paths by its use of the \\AFS UNC server name.</para>
    <para>OpenAFS is the product of an open source development effort begun on October 31 2000.  OpenAFS is maintained and developed by a group of volunteers with the support of the user community.   If you use OpenAFS as part of your computing infrastructure please contribute to its continued growth.
  </para>
  </preface>
  <chapter id='chap_1'>
    <title id='Installer_Options'>Installer Options</title>
    <para>It can be installed either as a new installation or an upgrade from previous versions of OpenAFS for Windows or IBM AFS for Windows.  Installers are provided in two forms:</para>
    <para>
      <orderedlist>
        <listitem>
   an executable (.exe) that is built using the Nullsoft Scriptable Installation System, or</listitem>
        <listitem>
  a Windows Installer package (.msi) that is built using WiX and can be customized for organizations via the use of MSI Transforms (see
          <link linkend='MSI_Deployment_Guide'>MSI Deployment Guide</link>)
  
        </listitem>
      </orderedlist>
    </para>
  </chapter>
  <chapter id='chap_2'>
    <title id='System_Requirements'>System Requirements</title>
    <section>
      <title id='Supported_Operating_Systems'>2.1 Supported Operating Systems</title>
      <itemizedlist>
        <listitem>
          <para>Microsoft Windows 2000 Workstation</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows 2000 Server </para>
        </listitem>
        <listitem>
          <para>Microsoft Windows XP Home</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows XP Professional</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows XP 64</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows 2003 Server (32-bit and 64-bit Intel)</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows 2003 R2 Server (32-bit and 64-bit Intel)</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows Vista (32-bit and 64-bit Intel)</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows 2008 Server (32-bit and 64-bit Intel)</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows 7 RC (32-bit and 64-bit Intel)</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows 2008 Server R2 RC (32-bit and 64-bit Intel)</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title id='Unsupported_Operating_Systems'>2.1.1 Unsupported Operating Systems</title>
      <itemizedlist>
        <listitem>
          <para> Microsoft Windows 95</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows 98</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows 98 OSR2</para>
        </listitem>
        <listitem>
          <para>Microsoft Windows ME</para>
        </listitem>
        <listitem>
          <para>Microsoft NT</para>
        </listitem>
      </itemizedlist>
      <para>Older releases of OpenAFS are available for download if unsupported operating systems must be used.  The last version of OpenAFS with support for Win9x is 1.2.2b.  The last version with support for Windows NT 4.0 is 1.2.10.</para>
    </section>
    <section>
      <title id='Disk_Space'>2.2 Disk Space</title>
      <para>Up to 60mb required for the OpenAFS binaries plus 100MB for the default AFSCache file.   The size of the AFSCache file may be adjusted via the Registry after installation.  The maximum cache size for 32-bit Windows is approximately 1.2GB.  On 64-bit Windows there is no practical limit on the cache size.</para>
    </section>
    <section>
      <title id='Additional_Software_Packages'>2.3 Additional Software Packages</title>
      <para>
        <ulink url='http://web.mit.edu/kerberos/dist/index.html'>MIT Kerberos for Windows</ulink> 2.6.x or 3.x.x if Kerberos v5 authentication support is desired.  The recommended release is version 3.2.2.  For 64-bit Windows installations, the 64-bit version of Kerberos for Windows is required.  For 32-bit Windows installations, the 32-bit version of Kerberos for Windows is required.
      
      
      
      </para>
    </section>
  </chapter>
  <chapter id='chap_3'>
    <title id='Operational_Notes'>Operational Notes</title>
    <section>
      <title id='Unicode_Support'>3.1. Unicode Support</title>
      <para>Starting with the 1.5.50 release of OpenAFS for Windows, each of the AFS Client Service, the AFS Explorer Shell Extension, and the command-line tools are Unicode enabled.  No longer is OpenAFS restricted to accessing file system objects whose names can be represented in the locale specific OEM code page.  This has significant benefits for end users.  Most importantly it permits non-Western languages to now be used for file system object names in AFS from Microsoft Windows operating systems.  Now that Unicode names are supported,
        <ulink url='http://en.wikipedia.org/wiki/Roaming_user_profile'>Roaming User Profiles</ulink> and
        <ulink url='http://en.wikipedia.org/wiki/Folder_redirection'>Folder Redirection</ulink> will no longer fail when a user attempts to store an object with a name that cannot be represented in the OEM code page.  
      
      
      
      </para>
      <para>Unicode names are stored in AFS using UTF-8 encoding.  UTF-8 is supported as a locale on MacOS X, Linux, Solaris, and most other operating systems.  This permits non-Western object names to be exchanged between Microsoft Windows and other operating systems.  The OpenAFS for Windows client also implements
        <ulink url='http://en.wikipedia.org/wiki/Unicode_normalization'>Unicode Normalization</ulink> as part of the name lookup algorithm.  This is necessary because Unicode does not provide a unique representation for each input string.  The use of normalization permits a file system object name created on MacOS X to be matched with the same string entered on Microsoft Windows even though the operating system’s choice of representation may be different.
      
      
      
      </para>
      <para>It is important to note that AFS file servers are not character set agnostic.  All file system object names are stored as octet strings without any character set tagging.  If a file system object is created using OEM Code Page 858 and then interpreted as UTF-8 it is likely that the object name will appear to be gibberish.  OpenAFS for Windows goes to great lengths to ensure that the object name is converted to a form that will permit the user to rename the object using Unicode.  Accessing UTF-8 names on UNIX systems that have the locale set to one of the ISO Latin character sets will result in the UTF-8 strings appearing to be gibberish.  </para>
      <para>Neither UNIX AFS nor Microsoft Windows 2000 systems can perform Unicode Normalization for string comparisons.  Although it is possible to store and read Unicode object names, it is possible that a user may not be able to open an object by typing the name of the object at the keyboard.  GUI point and click operations should permit any object to be accessed.</para>
    </section>
    <section>
      <title id='Kerberos_v5_Requirements'>3.2. Requirements for Kerberos v5 Authentication</title>
      <para>The Kerberos v4 infrastructure on which the OpenAFS 1.2 series is reliant is no longer secure.  Cross-realm Kerberos is very important in the AFS context and most sites have or are migrating to Kerberos v5 environments.  The OpenAFS 1.4 series (and later) integrates with
        <ulink url='http://web.mit.edu/kerberos/'>MIT Kerberos for Windows</ulink> 2.6.5 and above to support Kerberos v5 authentication including automatic renewal of AFS tokens and single sign-on via the Microsoft Windows Kerberos Logon Service.   
      
      
      
      </para>
      <para>The recommended version of
        <ulink url='http://web.mit.edu/kerberos/'>MIT Kerberos for Windows</ulink> is 3.2.2.  KFW 3.2.2 includes Network Identity Manager 1.3.1 which integrates with the
        <link linkend='Network_Identity_Manager_Provider'>AFS Provider</link> installed as part of OpenAFS for Windows.  
      
      
      
      </para>
      <para>When KFW is installed, the OpenAFS for Windows client will obtain Kerberos v5 tickets and use them as tokens without modification.  The OpenAFS client requires that all of the AFS Servers with which it communicates support the use of Kerberos v5 tickets as tokens. If Kerberos v5 based tokens are presented to an AFS server that does not support them, the server will be unable to communicate with the client when tokens are present. Kerberos v5 based tokens are supported by OpenAFS release 1.2.8 or later.  IBM Transarc servers do not support Kerberos v5.</para>
      <section>
        <title id='Active_Directory'>3.2.1. Active Directory</title>
        <para>Microsoft Windows Active Directory can be used as a Kerberos v5 KDC in conjunction with OpenAFS.  There are two things to consider when using an Active Directory as the Kerberos realm that issues the AFS service ticket.  First, the Kerberos v5 tickets issued by Active Directory can be quite large when compared to tickets issued by a traditional KDC due to the incorporation of authorization data (the Microsoft PAC).  If the issued tickets are larger than 344 bytes, the OpenAFS 1.2 servers will be unable to process them and will issue a RXKADBADTICKET error.  OpenAFS 1.4 (and beyond) servers can support the largest tickets that Active Directory can issue.  Second, the Kerberos v5 tickets issued by Windows 2003 Active Directory are encrypted with the DES-CBC-MD5 encryption type (enctype).  OpenAFS 1.2 servers only support the DES-CBC-CRC enctype.  As a result, OpenAFS 1.2 servers cannot process the resulting Kerberos v5 tokens.  Windows 2000 Active Directory issues tickets with the DES-CBC-CRC enctype.</para>
        <para>Microsoft has documented in
          <ulink url='http://support.microsoft.com/kb/832572/'>Knowledge Base article 832572</ulink> a new NO_AUTH_REQUIRED flag that can be set on the account mapped to the AFS service principal.  When this flag is set, the PAC authorization data will not be included in the ticket.  Setting this flag is recommended for all accounts that are associated with non-Windows services and that do not understand the authorization data stored in the PAC.  This flag cannot be used if AFS service tickets are obtained via cross-realm using an Active Directory user principal.
        
        
        
        </para>
        <para>Note that an Active Directory computer object cannot be used for the afs service principal.</para>
      </section>
      <section>
        <title id='Using_krb524_Service'>3.2.2. Using the krb524 Service</title>
        <para>Some organizations have AFS cell names and Kerberos realm names which differ by more then just lower and upper case and rely on a modification to krb524d which maps a Kerberos v5 ticket from realm FOO to a Kerberos v4 ticket in realm BAR.  This allows user@FOO to appear to be user@bar for the purposes of accessing the AFS cell.  As of OpenAFS 1.2.8, support was added to allow the immediate use of Kerberos v5 tickets as AFS (2b) tokens. This is the first building block necessary to break away from the limitations of Kerberos v4 with AFS.  By using Kerberos v5 directly we avoid the security holes inherent in Kerberos v4 cross-realm.  We also gain access to cryptographically stronger algorithms for authentication and encryption. </para>
        <para>Another reason for using Kerberos v5 directly is because the krb524 service runs on a port (4444/udp) which has increasingly been blocked by ISPs.  The port was used to spread a worm which attacked Microsoft Windows in the summer of 2003.  When the port is blocked users find that they are unable to authenticate.</para>
        <para>Replacing the Kerberos v4 ticket with a Kerberos v5 ticket is a win in all situations except when the cell name does not match the realm name and the principal names placed into the ACL’s are not the principal names from the Kerberos v5 ticket.  To support this transition, OpenAFS for Windows 1.4 adds a new registry value,
          <link linkend='Value_Use524'>Use524</link>, to force the use of krb524d.  However, the availability of this option should only be used by individuals until such time as their organizations can provide a more permanent solution.
        
        
        
        </para>
        <para>Note that the OpenAFS 1.4.x servers permit the use of a secondary realm name that can be treated as equivalent to the cell name for authentication.
        </para>
      </section>
      <section>
        <title id='Network_Identity_Manager_Provider'>3.2.3. Network Identity Manager Provider</title>
        <para>As of release 1.5.9, OpenAFS for Windows includes a Network Identity Manager Provider for obtaining AFS tokens.  This plug-in is a contribution from
          <ulink url='https://www.secure-endpoints.com/'>Secure Endpoints Inc.</ulink>  Network Identity Manager is a multiple identity credential management tool that ships with
          <ulink url='http://web.mit.edu/kerberos/'>MIT Kerberos for Windows</ulink> version 3.0 and above.  The OpenAFS plug-in requires
          <ulink url='http://web.mit.edu/kerberos/'>MIT Kerberos for Windows</ulink> version 3.1 or above.  Version 3.2.2 is recommended for the best user experience.
        
        
        
        </para>
        <para>
          <inlinemediaobject>
            <imageobject>
              <imagedata format='JPG' fileref='relnotes00.jpg' />
            </imageobject>
          </inlinemediaobject>
        </para>
        <para>The Network Identity Manager replaces the former KFW ticket manager, Leash&quot;, and when combined with the OpenAFS Provider, it is intended to be used as a replacement for the AFS System Tray Tool (afscreds.exe).  Unlike both Leash and the AFS System Tray Tool, Network Identity Manager with the OpenAFS Provider can easily manage AFS tokens for multiple cells from one or more Kerberos v5 identities.</para>
        <para>
          <inlinemediaobject>
            <imageobject>
              <imagedata format='JPG' fileref='relnotes01.jpg' />
            </imageobject>
          </inlinemediaobject>
        </para>
        <para>The AFS configuration panel for each Kerberos v5 identity is used to configure which cells credentials should be obtained for and how they should be obtained.  If the cell to realm mapping cannot be automatically determined, it can be explicitly specified.  If the cell does not support Kerberos v5 tickets as tokens, then a krb524 service can be configured.</para>
        <para>
          <inlinemediaobject>
            <imageobject>
              <imagedata format='JPG' fileref='relnotes02.jpg' />
            </imageobject>
          </inlinemediaobject>
        </para>
        <para>The OpenAFS Provider configuration panel can be used to check the status of the AFS Client Service and its version.  An optional checkbox is provided that will prevent the AFS System Tray Tool from being started by Windows after login.   A shortcut to the OpenAFS Control Panel is also provided.</para>
      </section>
    </section>
    <section>
      <title id='Use_of_Microsoft_Loopback'>3.3. Use of the Microsoft Loopback Adapter by the AFS Client Service</title>
      <para>By itself the OpenAFS Client Service does not provide robust behavior in a plug-n-play network environment.  Changes to the number of network adapters or their assigned IP addresses will cause the service to terminate unexpectedly.  To avoid this behavior OpenAFS for Windows installs a single instance of the Microsoft Loopback Adapter (MLA) on the machine.  With the MLA installed, the OpenAFS Client Service will not be affected by the configuration changes of other network adapters installed on the system.  </para>
      <para>The MLA is installed with a name of "AFS" and a pre-assigned IP address in the 10.x.x.x range.  The MLA is bound to the &quot;Client for Microsoft Networks&quot; service and not bound to the &quot;File and Printer Sharing for Microsoft Networks&quot;.  If the MLA is unbound to "Client Microsoft Networks", the OpenAFS Client Service will become inaccessible when the machine is disconnected from the network.  If the MLA is bound to "File and Printer Sharing ..." there will be a service type collision between the name "AFS" and the name of the machine on the MLA's IP Address that will result in the OpenAFS client service becoming inaccessible and the "NET VIEW \\AFS" command will return a "System Error 52" message.  To correct the problem:</para>
      <itemizedlist>
        <listitem>
          <para>stop the AFS Client Service</para>
        </listitem>
        <listitem>
          <para>bind the "Client for Microsoft Networks" to the MLA</para>
        </listitem>
        <listitem>
          <para>unbind "File and Printer Sharing for Microsoft Networks" from the MLA</para>
        </listitem>
        <listitem>
          <para>Disable and then re-enable the MLA</para>
        </listitem>
        <listitem>
          <para>start the AFS Client Service</para>
        </listitem>
      </itemizedlist>
      <para>When the MLA is not installed the unique NETBIOS name published by OpenAFS SMB server is "
        <emphasis>MACHINE</emphasis>-AFS".  One of the benefits of using the MLA is that the NETBIOS name does not have to be published on any adapter other than the MLA.  Therefore the chosen name is no longer required to be unique.  Instead the NETBIOS name associated with the AFS Client Service is simply "AFS" and portable UNC paths of the form \\AFS\cellname\path can now be used on all machines.
      
      
      
      </para>
    </section>
    <section>
      <title id='Using_Freelance_Mode'>3.4. Using Freelance (Dynamic Root) Mode to Improve Mobility</title>
      <para>Traditionally, when the OpenAFS Client Service starts it must be able to access the "root.afs" volume of the default cell.  The "root.afs" volume contains the set of mount points to the "root.cell" volumes of various cells the administrator of the default cell believes should be accessible.  If the "root.afs" volume is inaccessible when the client service is started, the service will terminate unexpectedly.  Since many users now use laptops or otherwise operate in disconnected environments in which a VPN may be required to access the cell's servers, it is often the case that the "root.afs" volume for the default cell is not reachable and the OpenAFS Client Service will not successfully start. </para>
      <para>To allow the OpenAFS Client Service to operate in these environments, Freelance mode dynamically constructs a fake "root.afs" volume from mount points and symlinks stored in the local registry.</para>
      <para>The content of the fake &quot;root.afs&quot; volume is dynamically generated as cells are accessed.  When the fake "root.afs" volume is initially constructed it will only contain two mount points: a
        <emphasis>regular path </emphasis>and
        <emphasis>read-write path </emphasis>mount point used to access the "root.cell" volume of the default AFS cell.  Any attempt to access a valid cell name will result in a new mount point being created in the fake "root.afs" volume.  If the cellname begins with a "." the mount point will be a
        <emphasis>read-write path</emphasis>; otherwise the mount point will be a
        <emphasis>regular path</emphasis>.  These mount points are preserved in the registry at key:
      
      
      
      </para>
      <para>
        <link linkend='Regkey_HKLM_SOFTWARE_OpenAFS_Client_Freelance'>HKLM\SOFTWARE\OpenAFS\Client\Freelance</link>
      </para>
      <para>Additional mount points may be manually created using the "fs mkmount" command.  Mount points may be removed using the "fs rmmount" command.</para>
      <para>&gt;fs mkmount \\AFS\athena.mit.edu root.cell athena.mit.edu</para>
      <para>&gt;fs mkmount \\AFS\.athena.mit.edu root.cell athena.mit.edu -rw</para>
      <para>&gt;fs rmmount \\AFS\athena.mit.edu</para>
      <para>&gt;fs rmmount \\AFS\.athena.mit.edu</para>
      <para>Symlinks may also be created within the Freelance &quot;root.afs&quot; volume.</para>
      <para>&gt;symlink make \\afs\link \\afs\athena.mit.edu\user\j\a\jaltman</para>
      <para>      &gt;symlink list \\afs\link</para>
      <para>      '\\afs\link' is a symlink to 'athena.mit.edu\user\j\a\jaltman'</para>
      <para>&gt;symlink rm \\afs\link</para>
      <para>The symlinks are stored in the registry at:</para>
      <para>
        <link linkend='Regkey_HKLM_SOFTWARE_OpenAFS_Client_Freelance_Symlinks'>HKLM\SOFTWARE\OpenAFS\Client\Freelance\Symlinks</link> 
      
      
      
      </para>
    </section>
    <section>
      <title id='Locating_VLDB_via_DNS'>3.5. Locating AFS Volume Database Servers via DNS </title>
      <para>The OpenAFS for Windows client will use DNS AFSDB records to discover the location of AFS Volume Database servers when entries for the cell are not present in the client's CellServDB file (\%PROGRAMFILES%\OpenAFS\Client\CellServDB).</para>
    </section>
    <section>
      <title id='Integrated_Logon'>3.6. Obtaining AFS Tokens as a Integrated Part of Windows Logon</title>
      <para>OpenAFS for Windows installs a WinLogon Network Provider to provide Single Sign-On functionality (aka Integrated Logon.)  Integrated Logon can be used when the Windows username and password match the username and password associated with the default cell's Kerberos realm.  For example, if the Windows username is "jaltman" and the default cell is "athena.mit.edu", then Integrated Logon can be successfully used if the windows password matches the password assigned to the Kerberos principal "jaltman@ATHENA.MIT.EDU".  The realm &quot;ATHENA.MIT.EDU&quot; is obtained by performing a domain name to realm mapping on the hostname of one of the cell's Volume Database servers.</para>
      <para>Integrated Logon is required if you desire the ability to store roaming user profiles within the AFS file system.  OpenAFS does not provide tools for synchronizing the Windows and Kerberos user accounts and passwords.</para>
      <para>When KFW is configured, Integrated Logon will use it to obtain tokens. Use of KFW for Integrated Logon can be disabled via the
        <link linkend='EnableKFW'>EnableKFW</link> registry value.  Use of the krb524 service can be configured via the
        <link linkend='Value_Use524'>Use524</link> registry value.
      
      
      
      </para>
      <para>Integrated Logon will not transfer Kerberos v5 tickets into the user’s logon session credential cache. KFW 3.1 and above provides that functionality on its own.</para>
      <para>Integrated Logon does not have the ability to cache the user's username and password for the purpose of obtaining tokens if the Kerberos KDC is inaccessible at logon time.</para>
      <para>Integrated Logon supports the ability to obtain tokens for multiple cells.  For further information on how to configure this feature read about the
        <link linkend='Value_TheseCells'>TheseCells</link> value.
      
      
      
      </para>
    </section>
    <section>
      <title id='AFS_System_Tray'>3.7. AFS System Tray Command Line Options</title>
      <para>The AFS System Tray Tool (afscreds.exe) has been deprecated in favor of Network Identity Manager.  afscreds.exe will be removed from the OpenAFS in a future release.</para>
      <para>The AFS System Tray tool (afscreds.exe) supports several command line options: </para>
      <itemizedlist>
        <listitem>
          <para>-A = autoinit </para>
        </listitem>
        <listitem>
          <para>-E = force existing afscreds to exit</para>
        </listitem>
        <listitem>
          <para>-I = install startup shortcut</para>
        </listitem>
        <listitem>
          <para>-M = renew drive maps </para>
        </listitem>
        <listitem>
          <para>-N = IP address change detection </para>
        </listitem>
        <listitem>
          <para>-Q = quiet mode.  do not display start service dialog if afsd_service is not already running</para>
        </listitem>
        <listitem>
          <para>-S = show tokens dialog on startup</para>
        </listitem>
        <listitem>
          <para>-U = uninstall startup shortcut</para>
        </listitem>
        <listitem>
          <para>-X = test and do map share</para>
        </listitem>
        <listitem>
          <para> -Z = unmap drives</para>
        </listitem>
      </itemizedlist>
      <para>autoinit will result in automated attempts to acquire AFS tokens when afscreds.exe is started.  afscreds.exe will attempt to utilize tickets stored in the MSLSA credentials cache; any existing CCAPI credentials cache; and finally display an Obtain Tokens dialog to the user.  When used in combination with IP address change detection, afscreds.exe will attempt to acquire AFS tokens whenever the IP address list changes and the Kerberos KDC is accessible.</para>
      <para>The renew drive maps option is used to ensure that the user drive maps constructed via the OpenAFS tools (not NET USE) are re-constructed each time afscreds.exe is started.</para>
      <para>By default afscreds.exe is configured by the OpenAFS.org installers to use &quot;-A -N -M -Q&quot; as startup options.  Currently, there is no user interface to change this selection after install time although these options may be altered via the registry on either per machine or per user basis.  See
        <link linkend='Value_AfscredsShortcutParams'>AfscredsShortcutParams</link> in
        <link linkend='appendix_a'>Appendix A</link>.
      
      
      
      </para>
    </section>
    <section>
      <title id='AFS_Client_Admin_Group'>3.8. The &quot;AFS Client Admins&quot; Authorization Group</title>
      <para>The OpenAFS for Windows client supports a local Windows authorization group named "AFS Client Admins".  This group is used in place of the "Administrators" group to determine which users are allowed to modify the AFS Client Service configuration via the AFS Control Panel (afs_config.exe) or fs.exe command line tool.  The following fs.exe commands are now restricted to members of the "AFS Client Admins" group:</para>
      <itemizedlist>
        <listitem>
          <para>checkservers with a non-zero timer value</para>
        </listitem>
        <listitem>
          <para>setcachesize</para>
        </listitem>
        <listitem>
          <para>newcell</para>
        </listitem>
        <listitem>
          <para>sysname with a new sysname list</para>
        </listitem>
        <listitem>
          <para>exportafs</para>
        </listitem>
        <listitem>
          <para>setcell</para>
        </listitem>
        <listitem>
          <para>setserverprefs</para>
        </listitem>
        <listitem>
          <para>storebehind</para>
        </listitem>
        <listitem>
          <para>setcrypt</para>
        </listitem>
        <listitem>
          <para>cscpolicy</para>
        </listitem>
        <listitem>
          <para>trace</para>
        </listitem>
        <listitem>
          <para>minidump</para>
        </listitem>
      </itemizedlist>
      <para>The creation or removal of mount points and symlinks in the Freelance &quot;root.afs&quot; volume are also restricted to members of the &quot;AFS Client Admins&quot; group.</para>
      <para>The initial membership of the "AFS Client Admins" group when created by the installer is equivalent to the local "Administrators" group.  If a user is added to the "Administrators" group after the creation of the "AFS Client Admin" group, that user will not be an AFS Client Administrator.  Only users that are members of the "AFS Client Admins" group are AFS Client Administrators.  The local "SYSTEM" account is an implicit member of the "AFS Client Admins" group.</para>
      <para>Setting the default sysname for a machine should be done via the
        <link linkend='Value_SysName'>SysName registry value</link> and not via "fs sysname".
      
      
      
      </para>
    </section>
    <section>
      <title id='Support_for_UNC_Paths'>3.9. OpenAFS Support for UNC Paths </title>
      <para>The OpenAFS client supports UNC paths everywhere.  UNC paths provide a canonical name for resources stored within AFS.  UNC paths should be used instead of drive letter mappings whenever possible.   This is especially true when specifying the location of roaming profiles and redirected folders.  </para>
      <para>Power users that make extensive use of the command line shell, cmd.exe, should consider using JP Software's 4NT or Take Command command processors.  Unlike cmd.exe, the JPSoftware shells fully support UNC paths as the current directory.  JPSoftware added special recognition for OpenAFS to its command shells, 4NT 7.0 and Take Command 7.0.  AFS paths can be entered in UNIX notation (e.g., /afs/openafs.org/software), space utilization reports the output of the volume status for the specified path, and many AFS specific functions and variables have been added to the command language.</para>
      <para>JPSoftware's web site is
        <ulink url='http://www.jpsoft.com/'>http://www.jpsoft.com</ulink>.
      
      
      
      </para>
    </section>
    <section>
      <title id='aklog.exe'>3.10. aklog.exe</title>
      <para>The OpenAFS Client ships with its own version of aklog.exe which should be used in preference to those obtained by other sources.  The OpenAFS aklog.exe supports Kerberos v5 as well as the ability to auto-generate AFS IDs within foreign PTS databases.</para>
      <para>
        <programlisting>
    Usage: aklog [-d] [[-cell | -c] cell [-k krb_realm]]
                 [[-p | -path] pathname]
                 [-noprdb] [-force]
                 [-5 [-m]| -4]
    
                 -d = output debugging information.
                 cell = zero or more cells for which tokens will be obtained
                 krb_realm = the kerberos realm of the cell.
                 pathname = the directory for which authentication is required
                 -noprdb = don't try to determine AFS ID.
                 -5 or -4 = use Kerberos V (default) or Kerberos IV tickets
                 -m = use krb524d to convert Kerberos V tickets to Kerberos IV
      </programlisting>
      </para>
    </section>
    <section>
      <title id='OpenAFS_Servers_on_Windows'>3.11. OpenAFS Servers on Windows are Unsupported</title>
      <para>The AFS Server functionality provided as part of the OpenAFS install package might work but should be considered highly experimental.  It has not been thoroughly tested.  Any data which would cause pain if lost should not be stored in an OpenAFS Server on Windows.</para>
      <para>Known issues include lack of support for power management and dynamic network configuration.  Salvager is also known to crash.</para>
      <section>
        <title id='OpenAFS_Server_Installation'>3.11.1. OpenAFS Server Installation</title>
        <para>When the OpenAFS Server is installed, the TransarcAFSServer service (bosctlsvc.exe) will be installed and configured.  The TransarcAFSServer service will auto-start the traditional AFS bos server.  The former AFS Server Configuration wizard makes assumptions that no longer hold true and it has therefore been disabled.  However, following the instructions for installing the AFS Servers on UNIX it is possible to properly configure the AFS Servers on Microsoft Windows.  The AFS Server binaries, configuration files, and log files are installed under %Program Files%\OpenAFS\Server.
          <ulink url='http://www.openafs.org/no-more-des.html'>kaserver has been deprecated and its use is strongly discouraged.</ulink>  Instead, Active Directory or some other Kerberos v5 KDC should be used in its place.
        
        
        
        </para>
      </section>
      <section>
        <title id='Using_the_AFS_Client_Service_with_OpenAFS_Server'>3.11.2. Using the AFS Client Service when the Server is installed</title>
        <para>A few notes on the usage of the AFS Client Service if it is going to be used with the OpenAFS AFS Server:</para>
        <itemizedlist>
          <listitem>
            <para>Freelance mode should be disabled when the AFS Client Service is installed on the same machine as the AFS Server,.  Otherwise, you will be unable to manipulate the contents of the root.afs volume for the hosted cell without constructing an explicit mountpoint to the root.afs volume from another volume.</para>
          </listitem>
          <listitem>
            <para>The AFS Server and related tools only support the built in kaserver (Kerberos IV).  If kaserver is being used,
              <ulink url='http://web.mit.edu/kerberos/'>MIT Kerberos for Windows</ulink> should not be installed or must be disabled via the
              <link linkend='EnableKFW'>EnableKFW</link> registry value.
        
            
            
            </para>
          </listitem>
          <listitem>
            <para>The AFS Servers are not aware of power management events nor are they aware of network configuration changes.  It is strongly advised that the AFS servers be installed only on systems that will not be shutdown or suspended unexpectedly.   An inadvertent shutdown will corrupt volume data.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
    <section>
      <title id='OpenAFS_Debug_Symbols'>3.12. OpenAFS Debugging Symbol files</title>
      <para>The OpenAFS for Windows installers include Debugging Symbol files which should be installed if you are experiencing problems and need to send crash reports.  This is true for both the release and the debug versions of the installers.  The difference between the release and debug versions are:</para>
      <itemizedlist>
        <listitem>
          <para>whether or not the binaries were compiled with optimization (release: yes, debug: no)</para>
        </listitem>
        <listitem>
          <para>whether or not the debug symbols are installed by default (release: no, debug: yes)</para>
        </listitem>
        <listitem>
          <para>whether or not
            <emphasis>fs trace</emphasis> logging is turned on by default (release: no, debug: yes)
      
          
          
          </para>
        </listitem>
        <listitem>
          <para>whether or not additional debug statements were compiled into the binaries (release: no, debug: yes)</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title id='Large_File_Support'>3.13. Large File (64-bit) Support</title>
      <para>As of release 1.5.3, OpenAFS for Windows supports files larger than 2GB.  The maximum file size is now 16777216 terabytes when the AFS File Server supports large files.   If the AFS File Server does not support 64-bit file sizes, then the maximum file size remains 2GB.</para>
    </section>
    <section>
      <title id='Encrypted_AFS_Network_Communication'>3.14. Encrypted AFS Network Communication</title>
      <para>The OpenAFS for Windows installer by default activates a weak form of encrypted data transfer between the AFS client and the AFS servers.  This is often referred to as "fcrypt" mode.  Encrypted data transfer can be turned on or off with the &quot;fs crypt&quot; command.  Transitions between &quot;crypt&quot; and &quot;non-crypt&quot; modes are logged to the Windows Application Event Log. </para>
    </section>
    <section>
      <title id='Authenticated_SMB_Access_to_Client_Service'>3.15. Authenticated SMB Access to the OpenAFS Client Service</title>
      <para>OpenAFS authenticates SMB connections using either NTLM or GSS SPNEGO (NTLM).  In previous versions of OpenAFS, the SMB connections were unauthenticated which opened the door for several attacks which could be used to obtain access to another user's tokens on shared machines.    </para>
      <para>When GSS SPNEGO attempts a Kerberos v5 authentication, the Windows SMB client will attempt to retrieve service tickets for "cifs/afs@REALM" (if the loopback adapter is in use) or "cifs/machine-afs@REALM" (if the loopback adapter is not being used).  It is extremely important that this service principal not exist in the KDC database as the Kerberos authentication must fail allowing automatic fallback to NTLM.  When NTLM is used a special local authentication mode will be used that does not require access to the user's password.  Instead, Windows will internally recognize the request as coming from a local logon session.</para>
    </section>
    <section>
      <title id='No_More_INI_Files'>3.16. No More INI Files</title>
      <para>Previous AFS clients for Windows stored configuration data in Windows .INI files.   The OpenAFS client does not use Windows .INI files for the storage of configuration data.   All settings are stored in the registry (see
        <link linkend='appendix_a'>Appendix A</link>).  The CellServDB file is now stored in either the %ALLUSERSPROFILE%\Application Data\OpenAFS\Client directory or the %PROGRAMFILES%\OpenAFS\Client directory.   The
        <link linkend='Value_CellServDBDir'>CellServDBDir</link> registry value or the AFSCONF environment variable can be used to specify an alternative location.
      
      
      
      </para>
      <para>For users converting from IBM AFS clients, during installation OpenAFS will relocate the contents of the &quot;afsdcell.ini&quot; file to the new CellServDB file.  OpenAFS will also import the contents of the &quot;afs_freelance.ini&quot; file to the Windows registry.   OpenAFS will not process the contents of the &quot;afsddbmt.ini&quot;.</para>
    </section>
    <section>
      <title id='Windows_Internet_Connection_Firewall'>3.17. Microsoft Windows Internet Connection Firewall</title>
      <para>The OpenAFS Client is compatible with the Internet Connection Firewall that debuted with Windows XP SP2 and Windows 2003 SP1.  The Internet Connection Firewall will be automatically adjusted to allow the receipt of incoming callback messages from the AFS file server.  In addition, the appropriate
        <emphasis>Back Connection</emphasis> registry entries are added to allow SMB authentication to be performed across the Microsoft Loopback Adapter.
      
      
      
      </para>
    </section>
    <section>
      <title id='Browsing_AFS_from_Explorer_Shell'>3.18. Browsing AFS from the Explorer Shell and Office</title>
      <para>The OpenAFS Client Service implements the CIFS Remote Admin Protocol which allows Explorer to browse server and share information. This significantly enhances the interoperability of AFS volumes within the Explorer Shell and Microsoft Office applications.</para>
    </section>
    <section>
      <title id='Byte_Range_Locking'>3.19. Byte Range Locking</title>
      <para>Many applications on Windows (e.g. Microsoft Office) require the use of byte range locks applied to a file either to protect against simultaneous file access or as a signaling mechanism.   OpenAFS for Windows release 1.5 (or greater) implements byte range locking within the CIFS-AFS gateway server.   This support for byte range locking obtains AFS’ advisory file server locks to simulate Microsoft Windows mandatory locks.   When an application opens a file, a lock will be obtained from AFS indicating that the file is in use.  If the lock is a write lock, access to the file will be restricted to other applications running on the same machine as the first application to request the lock.   Applications running on other machines will see the AFS full file lock and will be unable to access the file.</para>
      <para>Most Windows applications and Windows itself opens files in shared read mode. When this is done, a read lock is applied to the file.   This does not prevent shared read access across multiple machines but is used to ensure that no one writes to the file while it is in use.</para>
      <para>As the CIFS-AFS gateway server attempts to implement Windows lock semantics on top of AFS lock semantics it is important to understand how AFS file locks work.  In Windows there are no special privileges associated with obtaining file locks.  If you can read or execute a file, then you can obtain shared and exclusive locks.  In general, a Windows shared lock equates to an AFS read lock and a Windows exclusive lock equates to an AFS write lock.  In AFS if you can write to a file, then you can obtain a write lock.  However, in AFS if you can read a file it does not mean that you can obtain a read lock on it.   The ability to obtain read locks is granted only if you have the lock (or ‘k’) privilege.  This behavior is required in order to allow anonymous users to read files while preventing them from being able to deny access to the files to other users. 
        <emphasis>OpenAFS 1.4.0 and earlier as well as all IBM AFS file servers have an implementation bug that prevents users with write privileges from being able to obtain locks without the lock privilege.</emphasis>  When AFS serves data out of read-only volumes the file server will deny all requests for read and write locks because the contents of the volume cannot be changed by the client.
      
      
      
      </para>
      <para>Since Microsoft Windows applications almost always attempt to obtain a temporary exclusive lock when accessing files the OpenAFS Client’s CIFS-AFS gateway implements the following semantics in order to reduce the inconvenience on end users.  </para>
      <itemizedlist mark='bullet'>
        <listitem>
          <para>If the file is located on a read-only volume and the application requests a shared lock, the CIFS-AFS server will grant the lock request without asking the AFS file server.</para>
        </listitem>
        <listitem>
          <para>If the file is located on a read-only volume and the application opens the file with write access and requests an exclusive lock, the CIFS-AFS server will refuse the lock request and return a read only error.</para>
        </listitem>
        <listitem>
          <para>If the file is located on a read-only volume and the application opens the file with only read access and requests an exclusive lock, the CIFS-AFS server will fulfill the lock request with a read lock.</para>
        </listitem>
        <listitem>
          <para>If the file is located on a read-write volume and the application requests an exclusive lock, the CIFS-AFS server will request a write lock from the AFS file server.  If granted by the file server, then the CIFS-AFS server will grant the lock request.  If the request is denied due to an access denied error and the user has the lookup, read and lock privileges and the file was opened for read only access, then the CIFS-AFS server will request a read lock from the file server.  If the request is denied due to an access denied error and the user has the lookup and read privileges but not the lock privilege, then the CIFS-AFS server will grant the request even though the AFS file server said ‘no’.  If the user does not have at least those permissions, the CIFS-AFS server will deny the request.</para>
        </listitem>
        <listitem>
          <para>If the file is located on a read-write volume and the application requests a shared lock, the CIFS-AFS server will request a read lock from the AFS file server.  If granted by the file server, then the CIFS-AFS server grants the lock request.  If the request is denied due to an access denied error and the user has the lookup and read privileges but not the lock privilege, then the CIFS-AFS server will grant the request even though the AFS file server said ‘no’.  If the user does not have at least those permissions, the CIFS-AFS server will deny the request.</para>
        </listitem>
        <listitem>
          <para>If multiple processes on the same machine attempt to access the same file simultaneously, the CIFS-AFS server will locally manage the granted locks and all processes will share a single lock on the AFS file server.</para>
        </listitem>
        <listitem>
          <para>If the CIFS-AFS server is unable to renew the AFS file server locks, then it will invalidate the associated file handles.  This is the same behavior that an application will experience if it was using a Windows File Share and the connection was broken.   Invalidating the file handles prevents subsequent data corruption from taking place.</para>
        </listitem>
      </itemizedlist>
      <para>If you wish to disable the acquisition of locks from the file server, this can be performed using the
        <link linkend='Value_EnableServerLocks'>EnableServerLocks</link> registry value.
      
      
      
      </para>
    </section>
    <section>
      <title id='Automatic_Discarding_of_Tokens_at_Logoff'>3.20. Automatic Discarding of AFS Tokens at Logoff</title>
      <para>The OpenAFS Client will automatically forget a user's tokens upon Logoff unless the user's profile was loaded from an AFS volume.  In this situation there is no mechanism to determine when the profile has been successfully written back to the network.  It is therefore unsafe to release the user's tokens.  Whether or not the profile has been loaded from the registry can be determined for Local Accounts, Active Directory accounts and NT4 accounts.</para>
      <para>If there is a need to disable this functionality, the
        <link linkend='Value_LogoffPreserveTokens'>LogoffPreserveTokens</link> registry value can be used. (see
        <link linkend='appendix_a'>Appendix A</link>.)
      
      
      
      </para>
    </section>
    <section>
      <title id='Windows_Terminal_Server_Installs'>3.21. Windows Terminal Server installations</title>
      <para>When installing the NSIS (.exe) installer under Terminal Server, you must execute it from within the Add/Remove Programs Control Panel.  Failure to do so will result in AFS not running properly.  The AFS Server should not be installed on a machine with Terminal Server installed.</para>
    </section>
    <section>
      <title id='Hidden_Dot_Files'>3.22. Hidden Dot Files</title>
      <para>AFS is a UNIX native file system.  The OpenAFS client attempts to treat the files stored in AFS as they would be on UNIX.  File and directory names beginning with a "." are automatically given the Hidden attribute so they will not normally be displayed.  This behavior can be altered via the
        <link linkend='Value_HideDotFiles'>HideDotFiles</link> registry value.
      
      
      
      </para>
    </section>
    <section>
      <title id='Status_Cache_Limits'>3.23. Status Cache Limits</title>
      <para>The Status Cache (AFS Configuration Control Panel: Advanced Page) is defined to have a maximum number of entries.  Each entry represents a single file or directory entry accessed within the AFS file system.  When the maximum number of entries are allocated, entries will begin to be reused according to a least recently used (LRU) algorithm.  If the number of files or directories being accessed repeatedly by your applications is greater then the maximum number of entries, your host will begin to experience thrashing of the Status Cache and all requests will result in network operations.</para>
      <para>If you are experiencing poor performance try increasing the maximum number of Status Cache entries.  Each entry requires approximately 1.2K.  The default number of Status Cache entries is 10,000.  This can be adjusted using the
        <link linkend='Value_Stats'>Stats</link> registry value.
      
      
      
      </para>
    </section>
    <section>
      <title id='NETBIOS_over_TCP'>3.24. NETBIOS over TCP/IP must be enabled</title>
      <para>"Netbios over TCP/IP" must be active on the machine in order for communication with the AFS Client Service to succeed.  If "Netbios over TCP/IP" is disabled on the machine, then communication with the AFS Client Service will be impossible.  If you are using the Microsoft Loopback Adapter, configure the &quot;Netbios over TCP/IP&quot; setting for the adapter.</para>
    </section>
    <section>
      <title id='OpenAFS_binaries_digital_signatures'>3.25. OpenAFS binaries are digitally signed</title>
      <para>The OpenAFS Client Service and related binaries distributed by OpenAFS.org are digitally signed by "Secure Endpoints Inc.".  The OpenAFS Client Service will perform a run-time verification check to ensure that all OpenAFS related DLLs loaded by the service match the same file version number and were signed by the same entity.  This check has been added to prevent the stability problems caused by more than one AFS installation present on a machine at the same time.  Many hours of support time have been wasted tracking down problems caused by the mixture of files from different releases.  </para>
      <para>
        <link linkend='appendix_a'>Appendix A</link> documents the "
        <link linkend='Value_VerifyServiceSignature'>VerifyServiceSignature</link>" registry value which can be used to disable the signature check.  The file version check cannot be disabled.
      
      
      
      </para>
    </section>
    <section>
      <title id='Maximum_Cache_Size'>3.26. Maximum Size of the AFSCache File</title>
      <para>The maximum cache size on 32-bit Windows is approximately 1.3GB.  This is the largest contiguous block of memory in the 2GB process address space which can be used for constructing a memory mapped file.  Due to fragmentation of the process space caused by the loading of libraries required by the digital signature verification code, any attempt to specify a cache size greater then 700MB will result in the automatic disabling of the signature check.  Significantly larger cache sizes can be used on 64-bit Windows.</para>
    </section>
    <section>
      <title id='Filename_Character_Sets'>3.27. Filename Character Sets</title>
      <para>This section describes functionality and concerns related to pre-1.5.50 releases of OpenAFS for Windows.   This release stores all file names on the file servers as Unicode encoded using UTF-8.</para>
      <para>OpenAFS for Windows implements an SMB server which is used as a gateway to the AFS filesystem.  Because of limitations of the SMB implementation in pre-1.5.50 releases, Windows stored all files into AFS using OEM code pages such as CP437 (United States) or CP850 (Western Europe).  These code pages are incompatible with the ISO Latin-1 or Unicode (UTF-8) character sets typically used as the default on UNIX systems in both the United States and Western Europe.  Filenames stored by OpenAFS for Windows were therefore unreadable on UNIX systems if they include any of the following characters:</para>
      <informaltable frame='all'>
        <tgroup rowsep='1' align='left' colsep='1' cols='1'>
          <colspec colwidth='442pt' colname='c1' />
          <tbody>
            <row>
              <entry>
                <para>     [Ç]  128  08/00  200  80  C cedilla</para>
                <para>     [ü]  129  08/01  201  81  u diaeresis</para>
                <para>     [é]  130  08/02  202  82  e acute</para>
                <para>     [â]  131  08/03  203  83  a circumflex</para>
                <para>     [ä]  132  08/04  204  84  a diaeresis</para>
                <para>     [à]  133  08/05  205  85  a grave</para>
                <para>     [å]  134  08/06  206  86  a ring</para>
                <para>     [ç]  135  08/07  207  87  c cedilla</para>
                <para>     [ê]  136  08/08  210  88  e circumflex</para>
                <para>     [ë]  137  08/09  211  89  e diaeresis</para>
                <para>     [è]  138  08/10  212  8A  e grave</para>
                <para>     [ï]  139  08/11  213  8B  i diaeresis</para>
                <para>     [î]  140  08/12  214  8C  i circumflex</para>
                <para>     [ì]  141  08/13  215  8D  i grave</para>
                <para>     [Ä]  142  08/14  216  8E  A diaeresis</para>
                <para>     [Å]  143  08/15  217  8F  A ring</para>
                <para>     [É]  144  09/00  220  90  E acute</para>
                <para>     [æ]  145  09/01  221  91  ae diphthong</para>
                <para>     [Æ]  146  09/02  222  92  AE diphthong</para>
                <para>     [ô]  147  09/03  223  93  o circumflex</para>
                <para>     [ö]  148  09/04  224  94  o diaeresis</para>
                <para>     [ò]  149  09/05  225  95  o grave</para>
                <para>     [û]  150  09/06  226  96  u circumflex</para>
                <para>     [ù]  151  09/07  227  97  u grave</para>
                <para>     [ÿ]  152  09/08  230  98  y diaeresis</para>
                <para>     [Ö]  153  09/09  231  99  O diaeresis</para>
                <para>     [Ü]  154  09/10  232  9A  U diaeresis</para>
                <para>     [ø]  155  09/11  233  9B  o slash</para>
                <para>     [£]  156  09/12  234  9C  Pound sterling sign</para>
                <para>     [Ø]  157  09/13  235  9D  O slash</para>
                <para>     [×]  158  09/14  236  9E  Multiplication sign</para>
                <para>     [ƒ]  159  09/15  237  9F  Florin sign</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para> </para>
      <para>The pre-1.5.50 OpenAFS Client provided an optional registry value,
        <link linkend='Value_StoreAnsiFilenames'>StoreAnsiFilenames</link>, that could be set to instruct OpenAFS to store filenames using the ANSI Code Page instead of the OEM Code Page.  The ANSI Code Page is a compatible superset of Latin-1.  This setting is not the default setting because making this change would prevent OpenAFS for Windows from being able to access filenames containing the above characters which were created without this setting.
      
      
      
      </para>
      <para>All versions of OpenAFS for Windows 1.5.50 and above exchange file names with Microsoft Windows using the Unicode character set. All file names are read from and stored to AFS file servers using the UTF-8 encoding of Unicode. As a result the
        <link linkend='Value_StoreAnsiFilenames'>StoreAnsiFilenames</link> option is no longer supported. 
      
      
      
      </para>
    </section>
    <section>
      <title id='Character_Set_Issues_Roaming_Profiles'>3.28. Character Set Issues with Roaming Profiles</title>
      <para>This section describes functionality and concerns related to pre-1.5.50 releases of OpenAFS for Windows.   This release stores all file names on the file servers as Unicode encoded using UTF-8.</para>
      <para>There is a known issue with storing Windows Roaming Profiles when the profile contains either directories or files with names which cannot be represented in the local OEM character set.  In this case, attempts to write the profile back to AFS will fail during the character set conversion.  The pre-1.5.50 OpenAFS Client’s CIFS gateway did not support UNICODE.  To avoid this problem some sites run custom logoff scripts (assigned by group policy) which rename all files to use only the supported characters for the locale.</para>
      <para>Versions of OpenAFS for Windows 1.5.50 and above do not suffer from these issues.</para>
    </section>
    <section>
      <title id='AFSCache_File'>3.29. The AFSCache File</title>
      <para>The AFS Cache file is stored by default at %TEMP%\AFSCache in a persistent file marked with the Hidden and System attributes.  The persistent nature of the data stored in the cache file improves the performance of OpenAFS by reducing the number of times data must be read from the AFS file servers.  </para>
      <para>The performance of the AFS Client Service is significantly affected by the access times associated with the AFSCache paging file.   When given the choice, the AFSCache file should be placed on a fast disk, preferably NTFS, the file should not be compressed and should consist of as few fragments as possible.   Significant performance gains can be achieved by defragmenting the AFSCache file with SysInternal's Contig utility while the AFS Client Service is stopped.</para>
    </section>
    <section>
      <title id='Restricting_OpenAFS_Service_Start_and_Stop'>3.30. Restricting OpenAFS Client Service Start and Stop</title>
      <para>A new command line tool, afsdacl.exe, can be used to restrict the ability to start and stop the OpenAFS Client Service.</para>
      <para>
        <programlisting>
    afsdacl : Set or reset the DACL to allow starting or stopping
              the afsd service by any ordinary user.

    Usage: afsdacl [-set | -reset] [-show]
           -set   : Sets the DACL
           -reset : Reset the DACL
           -show  : Show current DACL (SDSF)
    </programlisting>
      </para>
    </section>
    <section>
      <title id='SysName_List'>3.31. The @sys Name List</title>
      <para>The default @sys name list in the OpenAFS Client is set to "x86_win32 i386_w2k i386_nt40" for 32-bit x86 systems.  The default is "amd64_win64" for amd 64-bit versions of Windows.</para>
    </section>
    <section>
      <title id='Symlinks_to_AFS_UNC_Paths'>3.32. Symlinks to AFS UNC Paths</title>
      <para>In OpenAFS, symlinks to AFS UNC paths, \\AFS[\all]\..., are treated the same as symlinks to /afs/...  However, please use /afs/... as the Windows UNC form will not work on UNIX client.</para>
    </section>
    <section>
      <title id='Cache_Manager_Debugging'>3.33. Cache Manager Debugging</title>
      <para>The OpenAFS Client implements the Cache Manager Debugging RPC Interface.  The CM debugger can be queried with cmdebug.exe.  </para>
      <para>
        <programlisting>
    Usage: cmdebug -servers &lt;server machine&gt; [-port &lt;IP port&gt;] [-long] [-refcounts]
                    [-callbacks] [-ctime] [-addrs] [-cache] [-cellservdb] [-help]
    Where: -long        print all info
           -refcounts   print only cache entries with positive reference counts
           -callbacks   print only cache entries with callbacks
           -ctime       print human readable expiration time
           -addrs       print only host interfaces
           -cache       print only cache configuration
           -cellservdb  print only cellservdb info
    </programlisting>
      </para>
    </section>
    <section>
      <title id='Windows_Logon_Caching_vs_Kerberos_Logons'>3.34. Windows Logon Caching vs. Kerberos Logons</title>
      <para>If you are a site which utilizes MIT/Heimdal Kerberos principals to logon to Windows via a cross-realm relationship with a multi-domain Windows forest, you must enable Windows logon caching unless the workstation is Windows Vista.</para>
    </section>
    <section>
      <title id='Initial_Server_Preferences'>3.35. Initial Server Preferences</title>
      <para>VLDB and File Server Preferences can now be provided initial values using registry keys.  This is useful for managed machines in a Windows domain which are centrally located (e.g., in a computing lab.)  See
        <link linkend='appendix_a'>Appendix A</link> for details on the "
        <link linkend='Regkey_HKLM_SOFTWARE_OpenAFS_Client_ServerPreferences'>Server Preferences</link>" keys.
      
      
      
      </para>
    </section>
    <section>
      <title id='File_Timestamps_and_DST'>3.36. File Timestamps and Daylight Saving Time</title>
      <para>The OpenAFS Client reports timestamps on files stored in AFS in UTC all year round.  In locales with daylight savings time, previous versions of AFS for Windows reported the time when DST is active as UTC+1.  This was done to preserve the relative local time for the user.  A file stored at 11:00am EST in January would be reported as having been stored at 11:00am EDT in June.  Unfortunately, this has the negative side effect of changing the reported timestamp from 16:00UTC to 15:00UTC.  Since Windows treats all file times in UTC, data synchronization applications which rely on the timestamp would believe that all files stored in AFS had changed.</para>
      <para>It should be noted that UNIX based operating systems (such as Solaris) do not appear to report file times to applications in UTC.  They do preserve the relative local time.  This may confuse some users who are used to being able to compare the timestamp in an UNIX shell with the timestamp from the Windows explorer.  During DST, these two times will no longer agree even though they are in fact representing the same moment in time.</para>
    </section>
    <section>
      <title id='Windows_RPC_client_support'>3.37. Windows RPC client support must be installed </title>
      <para>If the installer refuses to install and complains about an RPC configuration error, check to ensure that the following registry entries are present and that they refer to the dll "rpcrt4.dll":</para>
      <para>   HKLM "SOFTWARE\Microsoft\RPC\ClientProtocols" "ncacn_np"</para>
      <para>   HKLM "SOFTWARE\Microsoft\RPC\ClientProtocols" "ncacn_ip_tcp"</para>
      <para>   HKLM "SOFTWARE\Microsoft\RPC\ClientProtocols" "ncadg_ip_udp"</para>
      <para>   HKLM "SOFTWARE\Microsoft\RPC\ClientProtocols" "ncacn_http"</para>
    </section>
    <section>
      <title id='Generating_Minidumps'>3.38. Generating Minidumps of the OpenAFS Client Service</title>
      <para>OpenAFS 1.4 added a new command, "fs minidump".  This command can be used at any time to generate a mini dump file containing the current stack of the afsd_service.exe process.   This output can be very helpful when debugging the AFS Client Service when it is unresponsive to SMB/CIFS requests.</para>
    </section>
    <section>
      <title id='AFS_UUIDs_vs_System_Cloning'>3.39. AFS Client Universally Unique Identifiers (UUIDs) vs. System Cloning</title>
      <para>The OpenAFS Client implements Universally Unique Identifiers (UUIDs).  They are used to provide the AFS file server with a method of identifying the client that is independent of IP address.  This permits the AFS file server to track mobile clients or those behind Network Address Translators when they move from address to address or port to port. Tracking the client improves client performance by permitting callback state to be maintained across location changes. The UUID is generated when the AFSCache file is created and is maintained as long as the contents of the AFSCache file are valid.  The UUID is stored in the AFSCache file. </para>
      <para>When cloning machines that have Windows AFS client installed it is necessary to generate a new UUID for each client. This will be done automatically if the Windows Machine SID is re-generated using Microsoft SysPrep. If the SID is not being re-generated either the AFSCache file should be deleted or the command
        <emphasis>fs uuid -generate</emphasis> must be executed after the the clone is created.
        <emphasis role='bold'>Multiple AFS clients reporting the same UUID will not only result in horrible AFS client performance and cache inconsistencies, but they will also put a tremendous strain on the AFS file servers.</emphasis>
      </para>
      <para>For lab environments that wish to erase all cached data on each restart, the
        <link linkend='Value_NonPersistentCaching'>NonPersistentCaching</link> option will disable the use of the persistent cache file. As a side effect, a new UUID will be generated for the AFS client service on each restart.
      
      
      
      </para>
      <para>When a Windows system is cloned, the Microsoft Loopback Adapter will be disabled in the cloned system.  Administrators must re-install the Microsoft Loopback Adapter within the cloned environment.  This can be automated by using the OpenAFS &quot;
        <emphasis>instloop.exe</emphasis> –
        <emphasis>i</emphasis>&quot; command.  Instloop.exe can be extracted from the MSI installer by performing an administrative install via
        <emphasis>msiexec.exe /a</emphasis>.
      
      
      
      </para>
    </section>
    <section>
      <title id='Delayed_Write_Errors'>3.40. Delayed Write Errors with Microsoft Office Applications</title>
      <para>Microsoft Office makes heavy use of asynchronous input/output methods for reading and writing to file streams.  This can result in hundreds of requests being simultaneously queued for service by the CIFS client with a fixed timeout period.  As the AFS CIFS server is local to the machine the Windows CIFS client believes that it can respond almost instantaneously to write requests as the actual writing to the AFS file server is performed by a background daemon thread.  When the actual network bandwidth to the AFS file server is slow and the file size is large it is possible for the CIFS client to time out the connection.  When this happens a &quot;delayed write error&quot; will be reported to the user and the application may crash.  The only workaround at the current time is to save first to a local disk and subsequently copy the file to AFS as copying a file with the explorer shell does not use asynchronous i/o. </para>
      <para>The CIFS session timeout defaults to 45 seconds and can be increased by modifying the
        <link linkend='Value_ConnDeadTimeout'>ConnDeadTimeout registry value</link>. 
      
      
      
      </para>
      <para>Beginning with the 1.5.33 release, the performance characteristics of SMB Write Data operations can be adjusted.  In prior releases all writes were performed using a restricted asynchronous store model in which only one asynchronous store operation per file can be performed at a time.  The reason for this restriction is limit the amount of data the cache manager will accept without it having been written to the file server.  If too much unwritten data is accepted, the file close operation will block until all of the unwritten data is output and this could trigger a CIFS client disconnect.  </para>
      <para>Prior to 1.5.33 the size of the asynchronous store was always equal to the chunk size which was often too large for low bandwidth connections.  The asynchronous store size now defaults to 32KB and is configurable using the
        <link linkend='Value_SMBAsyncStoreSize'>SMBAsyncStoreSize</link> registry value.  Asynchronous store operations can also be disabled using the
        <link linkend='Value_EnableSMBAsyncStore'>EnableSMBAsyncStore</link> registry value in which case all writes received by the cache manager block until the Rx StoreData operation completes.
      
      
      
      </para>
    </section>
    <section>
      <title id='Global_Drives'>3.41. Global Drives (aka Service Drive Letters) are no longer supported by Microsoft</title>
      <para>The Global DriveAuto-mount feature has been deprecated due to the following Microsoft KB article.</para>
      <para>
        <ulink url='http://msdn.microsoft.com/library/en-us/dllproc/base/services_and_redirected_drives.asp'>http://msdn.microsoft.com/library/en-us/dllproc/base/services_and_redirected_drives.asp</ulink>
      </para>
      <para>It says that services mounting drive letters are no longer supported by Microsoft and may act unpredictably.  The experience other users have had is that if the connection to the OpenAFS CIFS/SMB server is terminated by the Windows CIFS client, the drive mapping may not be re-established until the machine is rebooted.</para>
      <para>OpenAFS supports UNC paths and whenever possible applications should be modified to use of \\AFS\&lt;cellname&gt;\&lt;path&gt; instead of drive letters.</para>
    </section>
    <section>
      <title id='64-bit_Windows'>3.42. 64-bit Microsoft Windows Installations</title>
      <para>Although 64-bit Windows platforms support both 64-bit and 32-bit applications, the OpenAFS Service installed on the machine must be 64-bit.  The 64-bit installer contains only 64-bit executables.  In order to support 32-bit applications that link against OpenAFS libraries it is required that a separate 32-bit OpenAFS Tools set be installed.  For example, the 32-bit version of Kerberos for Windows can be used with the 32-bit OpenAFS Tools to manage AFS tokens.</para>
      <para>OpenAFS on 64-bit Windows benefits from the lifting of the 2GB process memory restriction that is present in 32-bit Windows.   Without this restriction the AFS Cache File can become arbitrarily large limited only by available disk space.</para>
    </section>
    <section>
      <title id='Windows_Vista_Known_Issues'>3.43. Known Issues with Microsoft Windows Vista</title>
      <para>OpenAFS for Windows works with Microsoft Windows Vista from both the command prompt and the Explorer Shell.  When performing an upgrade from earlier versions of Microsoft Windows the Microsoft Loopback Adapter (MSLA) will be uninstalled.   OpenAFS should be re-installed after the Microsoft Vista installation to restore the MSLA configuration.</para>
      <para>Due to a feature change in Windows Vista’s Plug-n-Play network stack, during a standby/hibernate operation the MSLA is disabled just as any other hardware device would be.  This causes the OpenAFS Client’s network binding to be lost.  As a result, it takes anywhere from 30 to 90 seconds after the operating system is resumed for access to the OpenAFS Client and the AFS file space to become available.  Until the network bindings have been re-established, ticket managers and other tools will report that the AFS Client Service may not have been started.</para>
      <para>Windows Vista implements
        <ulink url='http://www.microsoft.com/technet/windowsvista/library/0d75f774-8514-4c9e-ac08-4c21f5c6c2d9.mspx'>User Account Control</ulink> (UAC), a new security feature that implements least user privilege.  With UAC, applications only run with the minimum required privileges.  Even Administrator accounts run applications without the &quot;Administrator&quot; access control credentials.  One side effect of this is that existing applications that mix user and system configuration capabilities must be re-written to separate those functions that require &quot;Administrator&quot; privileges into a separate process space.  Future updates to OpenAFS will incorporate the necessary privilege separation, until that time some functions such as the Start and Stop Service features of the AFS System Tray tool and the AFS Control Panel will not work unless they are &quot;Run as Administrator&quot;.  When a Vista user account that is a member of the &quot;Administrators&quot; group is used to access the AFS Control Panel (afs_config.exe), the process must be &quot;Run as Administrator&quot;.   Otherwise, attempts to modify the OpenAFS configuration will appear to succeed but in reality will have failed due to Vista’s system file and registry virtualization feature.
      
      
      
      </para>
      <para>The help files provided with OpenAFS are in .HLP format.
        <ulink url='http://support.microsoft.com/kb/917607'>Windows Vista does not include a help engine for this format.</ulink>
      </para>
    </section>
    <section>
      <title id='AFS_Share_Direct_Access_to_Volumes'>3.44. New AFS Share Name Syntax Provides Direct Access to Volumes</title>
      <para>Starting with the 1.5.21 release of OpenAFS for Windows, the following syntax can be used to access any volume in any cell without requiring the creation of a mount point.</para>
      <para>\\AFS\&lt;cell&gt;&lt;mount point type&gt;&lt;volume&gt;\</para>
      <para>Where &lt;cell&gt; can be either a full cell name or an unambiguous prefix, the &lt;mount point type&gt; is ‘#’ for a normal mount point or ‘%’ to force the use of a read-write volume, and &lt;volume&gt; is either a volume name or its ID number.</para>
      <para>Examples include:</para>
      <para>	\\AFS\athena.mit.edu#user.jaltman\</para>
      <para>	\\AFS\athena%user.jaltman\</para>
      <para>	\\AFS\athena.mit.edu# 537235559\</para>
    </section>
    <section>
      <title id='Differences_between_Windows_and_Unix'>3.45. Differences between Windows and UNIX &quot;fs examine&quot;</title>
      <para>The OpenAFS for Windows version of &quot;fs examine&quot; provide two additional lines of output when compared to the UNIX implementation.  These lines include the owner and group information for the file as well as the volume status.  The Windows output will also indicate the type of object {File, Directory, Mountpoint, Symlink, ...} that was examined.</para>
      <para>[C:\]fs examine \\afs\athena#user.jaltman</para>
      <para>Directory \\afs\athena#user.jaltman (537235559.1.1) contained in cell athena.mit.edu</para>
      <para>
        <emphasis role='bold'>Owner jaltman (28180) Group 0</emphasis>
      </para>
      <para>Volume status for vid = 537235559 named user.jaltman is</para>
      <para>Current disk quota is 1500000</para>
      <para>Current blocks used are 1244184</para>
      <para>The partition has 151945877 blocks available out of 511163724</para>
      <para>Volume is online </para>
    </section>
    <section>
      <title id='fs_Command_Literal_Option'>3.46. Literal evaluation of AFS objects via fs commands</title>
      <para>Beginning with the 1.5.31 release, the fs commands
        <emphasis>examine</emphasis>,
        <emphasis>flush</emphasis>,
        <emphasis>whereis</emphasis>, and
        <emphasis>whichcell</emphasis> provide a new command-line parameter,
        <emphasis>-literal</emphasis>.  When specified, if the evaluated object is a symlink or a mountpoint the resulting output will describe the specified object and not the object that is the target of the symlink or mountpoint.
      
      
      
      </para>
    </section>
    <section>
      <title id='Out_of_Quota_Errors'>3.47. Out of Quota errors</title>
      <para>Prior to the 1.5.31 release, out of quota errors were reported to the calling application as an out of space error.  As of 1.5.31, an out of space error will indicate that the partition on which the volume is located is in fact out of space.  Whereas an out of quota error indicates that the user does not have permission to allocate additional space.</para>
    </section>
    <section>
      <title id='Linked_Cells'>3.48. Linked Cells</title>
      <para>The 1.5.55 release adds support for linked cells as implemented in the Unix OpenAFS client.  When two cells are linked, a volume lookup in one cell that fails is retried in the linked cell.  This functionality can be used to implement:</para>
      <itemizedlist mark='bullet'>
        <listitem>
          <para>a test cell which provides substitutes for a subset of the volumes in the linked production cell</para>
        </listitem>
        <listitem>
          <para>a cell renaming</para>
        </listitem>
        <listitem>
          <para>a cell splitting</para>
        </listitem>
        <listitem>
          <para>a cell merger</para>
        </listitem>
      </itemizedlist>
      <para>Two cells are linked in the CellServDB file:</para>
      <para>&gt;cell-one	cell-two	#Description
...
&gt;cell-two	cell-one	#Description
...</para>
      <para>aklog and Network Identity Manager will automatically obtain tokens for the linked cell when tokens for the other cell is specified.
      </para>
    </section>
  </chapter>
  <chapter id='chap_4'>
    <title id='How_to_Debug_Problems'>How to Debug Problems with OpenAFS for Windows</title>
    <para>OpenAFS for Windows provides a wide range of tools to assist you in debugging problems.  The techniques available to you are varied because of the wide range of issues that have been discovered over the years.</para>
    <section>
      <title id='pioctl_debugging'>4.1. pioctl debugging (
        <link linkend='Value_IoctlDebug'>IoctlDebug</link> registry key)
      
      
      
      </title>
      <para>pioctl (path-based ioctl) calls are used by various tools to communicate with the AFS Client Service.  Some of the operations performed include:</para>
      <itemizedlist>
        <listitem>
          <para>setting/querying tokens  (tokens.exe, aklog.exe, afscreds.exe)</para>
        </listitem>
        <listitem>
          <para>setting/querying ACLs </para>
        </listitem>
        <listitem>
          <para>setting/querying cache parameters</para>
        </listitem>
        <listitem>
          <para>flushing files or volumes</para>
        </listitem>
        <listitem>
          <para>setting/querying server preferences</para>
        </listitem>
        <listitem>
          <para>querying path location</para>
        </listitem>
        <listitem>
          <para>checking the status of servers and volumes</para>
        </listitem>
        <listitem>
          <para>setting/querying the sysname list</para>
        </listitem>
      </itemizedlist>
      <para>pioctl calls are implemented by writing to a special UNC path that is processed by the AFS Client Service.   If there is a failure to communicate with the AFS Client Service via SMB/CIFS, it will be impossible to perform any of the above operations.   </para>
      <para>To assist in debugging these problems, the registry value:</para>
      <para>  [HKLM\SOFTWARE\OpenAFS\Client]</para>
      <para>  REG_DWORD:  IoctlDebug   = 0x01</para>
      <para>should be set.  Then any of the commands that perform pioctl calls should be executed from the command prompt.  With this key set the pioctl library will generate debugging output to stderr.  The output will contain the Win32 API calls executed along with their most important parameters and their return code.   The MSDN Library and the Microsoft KnowledgeBase can be used as a reference to help you determine the configuration probem with your system.</para>
    </section>
    <section>
      <title id='afsd_service_init_log'>4.2. afsd_service initialization log (%WinDir%\TEMP\afsd_init.log)</title>
      <para>Every time the AFS Client Service starts it appends data about its progress and configuration to a file.  This file provides information crucial to determining why the service cannot start when there are problems.  When the process terminates due to a panic condition it will write to this file the source code file and line number of the error.  In many cases the panic condition is due to a misconfiguration of the machine.  In other cases it might be due to a programming error in the software.  A quick review of the location in the source code will quickly reveal the reason for the termination.</para>
      <para>The
        <link linkend='Value_MaxLogSize'>MaxLogSize</link> registry value determines the maximum size of the %WINDIR%\TEMP\afsd_init.log file.  If the file is larger than this value when OpenAFS Client Service starts, the file will be reset to 0 bytes.  If value is set to 0, the file will be allowed to grow indefinitely.
      
      
      
      </para>
    </section>
    <section>
      <title id='afsd_service_debug_log'>4.3. afsd_service debug logs (fs trace {-on, -off, -dump} -&gt;%WinDir%\TEMP\afsd.log)</title>
      <para>When attempting to debug the behavior of the SMB/CIFS Server and the Cache Manager it is often useful to examine a log of the operations being performed.  While running the AFS Client Service keeps an in memory log of many of its actions.   The default number of actions preserved at any one time is 5000.  This can be adjusted with the
        <link linkend='Value_TraceBufferSize'>TraceBufferSize registry value</link>:
      
      
      
      </para>
      <para>  [HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\Parameters]</para>
      <para>  REG_DWORD  TraceBufferSize </para>
      <para>A restart of the service is necessary when adjusting this value.   Execute "fs trace -on" to clear to the log and "fs trace -dump" to output the contents of the log to the file.</para>
    </section>
    <section>
      <title id='Using_Sysinternals_Tools'>4.4. Using SysInternal’s Debug Viewer, Process Monitor and Process Explorer Tools</title>
      <para>An alternatve option to the use of "fs trace -dump" to capture internal OpenAFS Client Service events is to use a tool such as Sysinternal's
        <ulink url='http://technet.microsoft.com/en-us/sysinternals/bb896647.aspx'>Debug Viewer</ulink> to capture real-time debugging output.  When the OpenAFS Client Service starts and Bit 2 of the
        <link linkend='Value_TraceOption'>TraceOption</link> value in the registry is set, all trace log events are output using the Windows Debug Monitor interface (OutputDebugString).  
      
      
      
      </para>
      <para>  [HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\Parameters]</para>
      <para>REG_DWORD   TraceOption = 0x04</para>
      <para>Use &quot;fs trace –on&quot; and &quot;fs trace –off&quot; to toggle the generation of log messages. </para>
      <para>Sysinternal’s
        <ulink url='http://technet.microsoft.com/en-us/sysinternals/bb896645.aspx'>Process Monitor</ulink> can be use to monitor the file operations requested by applications and their success or failure.   
      
      
      
      </para>
      <para>In Process Monitor, set a filter to include only events on file paths that refer to the AFS name space. Be sure to include both the UNC path as well as any drive letters mapped to AFS. </para>
      <para>Turn on the
        <emphasis>Clock Time</emphasis> and
        <emphasis>Show Milliseconds</emphasis> options in both tools to make it easier to synchronize the application requests and the resulting OpenAFS Client Service operations.   The captured data can be stored to files for inclusion in
        <link linkend='Reporting_Bugs'>bug reports</link>.
      
      
      
      </para>
      <para>Sysinternal's
        <ulink url='http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx'>Process Explorer</ulink> is a replacement for the Windows Task Manager and so much more.  Process Explorer can be configured to use the DbgHelp.dll from "
        <ulink url='http://www.microsoft.com/whdc/devtools/debugging/default.mspx'>Microsoft Debugging Tools for Windows</ulink>" as well as the debug symbols shipped as an optional component of the OpenAFS for Windows installer.  (Options-&gt;Configure Symbols)   Once configured the "Threads" tab of the process properties dialog will permit the viewing of a fully documented stack for each displayed thread.  Hint: If there is a deadlock in the cache manager, two or more of the threads will be stuck in a call to osi_TWait().
      
      
      
      </para>
    </section>
    <section>
      <title id='Creating_Microsoft_Minidumps'>4.5. Creating Microsoft MiniDumps 
(fs minidump -&gt; %WinDir%\TEMP\afsd.dmp)</title>
      <para>If the AFS Client Service become unresponsive to any form of communication there may be a serious error that can only be debugged by someone with access to the source code and a debugger.   The "fs minidump" command can be used to force the generation of a MiniDump file containing the state of all of the threads in the AFS Client Service process.  The most accurate MiniDump files will be produced after installing "
        <ulink url='http://www.microsoft.com/whdc/devtools/debugging/default.mspx'>Microsoft Debugging Tools for Windows</ulink>".
      
      
      
      </para>
      <para>The
        <link linkend='Value_MiniDumpType'>MiniDumpType</link> registry value can be used to adjust the scope of the process information included within the dump file.  By default the MiniDump only contains the stacks of all threads and the values of all global variables.  A much more useful MiniDump is one that contains the contents of the heap.  Be warned, a MiniDump with heap will be as large as the cache file.  In addition, it will include all of the data stored within the cache.  If there are privacy concerns, do not produce a MiniDump with heap.
      
      
      
      </para>
    </section>
    <section>
      <title id='Integrated_Logon_Debugging'>4.6. Single Sign-on (Integrated Logon) debugging</title>
      <para>If you are having trouble with the Integrated Logon operations it is often useful to be able to obtain a log of what it is attempting to do.   Setting Bit 0 of the
        <link linkend='Value_TraceOption'>TraceOption</link> registry value:
      
      
      
      </para>
      <para>  [HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\Parameters]</para>
      <para>  REG_DWORD   TraceOption = 0x01</para>
      <para>will instruct the Integrated Logon Network Provider and Event Handlers to log information to the Windows Event Log: Application under the name &quot;AFS Logon".</para>
    </section>
    <section>
      <title id='rxdebug_usage'>4.7. RX (AFS RPC) debugging (rxdebug)</title>
      <para>The rxdebug.exe tool can be used to query a variety of information about the AFS services installed on a given machine.  The port for the AFS Cache Manager is 7001.  </para>
      <para>
        <programlisting>
    Usage: rxdebug -servers &lt;server machine&gt; [-port &lt;IP port&gt;] [-nodally]
           [-allconnections] [-rxstats] [-onlyserver] [-onlyclient]
           [-onlyport &lt;show only &lt;port&gt;&gt;]
           [-onlyhost &lt;show only &lt;host&gt;&gt;]
           [-onlyauth &lt;show only &lt;auth level&gt;&gt;] [-version]
           [-noconns] [-peers] [-help]
    Where: -nodally         don't show dallying conns
           -allconnections  don't filter out uninteresting connections
           -rxstats         show Rx statistics
           -onlyserver      only show server conns
           -onlyclient      only show client conns
           -version         show AFS version id
           -noconns         show no connections
           -peers           show peers
      </programlisting>
      </para>
    </section>
    <section>
      <title id='cmdebug_usage'>4.8. Cache Manager debugging (cmdebug)</title>
      <para>The cmdebug.exe tool can be used to query the state of the AFS Cache Manager on a given machine.</para>
      <para>
        <programlisting>
    Usage: cmdebug -servers &lt;server machine&gt; [-port &lt;IP port&gt;] [-long] [-refcounts]
           [-callbacks] [-ctime] [-addrs] [-cache] [-cellservdb] [-help]
    Where: -long        print all info
           -refcounts   print only cache entries with positive reference counts
           -callbacks   print only cache entries with callbacks
           -ctime       print human readable expiration time
           -addrs       print only host interfaces
           -cache       print only cache configuration
           -cellservdb  print only cellservdb info
      </programlisting>
      </para>
    </section>
    <section>
      <title id='Persistent_Cache_Consistency_Check'>4.9. Persistent Cache consistency check</title>
      <para>The persistent cache is stored in a Hidden System file at %WinDir%\TEMP\AFSCache.  If there is a problem with the persistent cache that prevent the AFS Client Service from being able to start a validation check on the file can be performed.</para>
      <para>  afsd_service.exe --validate-cache &lt;cache-path&gt;</para>
    </section>
    <section>
      <title id='Token_Acquisition_Debugging'>4.10. Token Acquisition Debugging</title>
      <para>If you are having trouble obtaining tokens with the Network Identity Manager AFS credential provider, it is recommended that you verify your ability to obtain tokens using the command-line tools
        <emphasis>klog.exe</emphasis> (if you are using kaserver) or
        <emphasis>kinit.exe</emphasis> and
        <emphasis>aklog.exe</emphasis> (if you are using Kerberos v5.)  The aklog.exe
        <emphasis>–d</emphasis> option will be quite helpful in diagnosing Kerberos v5 related problems.
      
      
      
      </para>
    </section>
  </chapter>
  <chapter id='chap_5'>
    <title id='Reporting_Bugs'>Reporting Bugs</title>
    <para>Bug reports should be sent to
      <ulink url='mailto:openafs-bugs@openafs.org?subject=Bug%20Report'>openafs-bugs@openafs.org</ulink>.  Please include as much information as possible about the issue.  If you are reporting a crash, please install the debugging symbols by re-running the installer.  If a dump file is available for the problem, %WINDIR%\TEMP\afsd.dmp, include it along with the AFS Client Trace file  %WINDIR%\TEMP\afsd.log.  The AFS Client startup log is %WINDIR%\TEMP\afsd_init.log.  Send the last continuous block of  log information from this file.
    
    
    
    </para>
    <para>Configuring DrWatson to generate dump files for crashes:</para>
    <orderedlist>
      <listitem>
        <para>Run drwtsn32.exe to configure or to identify where the log and the crash dump files are created: </para>
      </listitem>
      <listitem>
        <para>click Start &gt; Run...  </para>
      </listitem>
      <listitem>
        <para>type drwtsn32 &lt;enter&gt;. </para>
      </listitem>
      <listitem>
        <para>Select either a Crash Dump Type: Mini or Full. </para>
      </listitem>
      <listitem>
        <para>Clear Dump Symbol Table</para>
      </listitem>
      <listitem>
        <para>Clear Append to Existing Log file. </para>
      </listitem>
      <listitem>
        <para>Check Dump All Thread Contexts.</para>
      </listitem>
      <listitem>
        <para>Check Create Crash Dump File</para>
      </listitem>
      <listitem>
        <para>Next run the monitoring module of Dr. Watson: </para>
      </listitem>
      <listitem>
        <para>click Start &gt; Run...</para>
      </listitem>
      <listitem>
        <para>type drwatson &lt;enter&gt;. </para>
      </listitem>
      <listitem>
        <para>Once a crash happens, Dr. Watson generates a dump file and a report in the log file, including the address of the crash and the stack dump.</para>
      </listitem>
    </orderedlist>
    <para>Once you have the Dr. Watson's logfile and minidump, zip them and attach them to your e-mail.</para>
    <para>When reporting a error, please be sure to include the version of OpenAFS.
    </para>
  </chapter>
  <chapter id='chap_6'>
    <title id='Contributing_to_OpenAFS'>How to Contribute to the Development of OpenAFS for Windows</title>
    <para>Contributions to the development of OpenAFS for Windows are continuously needed.  Contributions may take many forms including cash donations, support contracts, donated developer time, and even donated tech writer time.</para>
    <section>
      <title id='USENIX_OpenAFS_Fund'>6.1. The USENIX OpenAFS Fund </title>
      <para>
        <ulink url='http://www.usenix.org/'>USENIX</ulink>, a 501c3 non-profit corporation, has formed the USENIX OpenAFS Fund in order to accept tax deductible donations on behalf of the OpenAFS Elders. The donated funds will be allocated by the OpenAFS Elders to fund OpenAFS development, documentation, project management, and maintaining openafs.org. 
      
      
      
      </para>
      <informaltable frame='none'>
        <tgroup rowsep='1' align='left' colsep='1' cols='1'>
          <colspec colwidth='405pt' colname='c1' />
          <tbody>
            <row>
              <entry>
                <para>USENIX OpenAFS Fund
USENIX Association 
2560 Ninth St., Suite 215 
Berkeley, CA 94710 </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para>Donations can be made by sending a check, drawn on a U.S. bank, made out to the USENIX OpenAFS Fund or by making a
        <ulink url='https://db.usenix.org/cgi-bin/openafs/openafs.cgi'>donation online</ulink>.
      
      
      
      </para>
    </section>
    <section>
      <title id='Secure_Endpoints_Inc'>6.2. Secure Endpoints Inc. </title>
      <para>
        <ulink url='http://www.secure-endpoints.com/'>Secure Endpoints Inc.</ulink> provides development and support services for OpenAFS for Windows and
        <ulink url='http://web.mit.edu/kerberos/'>MIT Kerberos for Windows</ulink>.  Donations provided to Secure Endpoints Inc. for the development of OpenAFS are used to cover the OpenAFS gatekeeper responsibilities; providing support to the OpenAFS community via the OpenAFS mailing lists; and furthering development of desired features that are either too small to be financed by development contracts.
      
      
      
      </para>
      <para>Secure Endpoints Inc. accepts software development agreements from organizations who wish to fund a well-defined set of bug fixes or new features. </para>
      <para>Secure Endpoints Inc. provides contract based support for the OpenAFS for Windows and the
        <ulink url='http://web.mit.edu/kerberos/'>MIT Kerberos for Windows</ulink> products. 
      
      
      
      </para>
    </section>
    <section>
      <title id='Direct_Code_Contributions'>6.3. Direct contributions of code and/or documentation </title>
      <para>Organizations that use OpenAFS in house and have development staffs are encouraged to contribute any code modifications they make to OpenAFS.org via openafs-bugs@openafs.org.  Contributions of documentation are highly desired. </para>
    </section>
    <section>
      <title id='OAFW_Mailing_Lists'>6.4. OpenAFS for Windows Mailing Lists</title>
      <para>If you wish to participate in OpenAFS for Windows development please join the
        <ulink url='mailto:openafs-win32-devel@openafs.org?subject=OpenAFS%20for%20Windows%20Development%20Contribution'>openafs-win32-devel@openafs.org</ulink> mailing list.
      
      
      
      </para>
      <para>
        <emphasis role='bold'>https://lists.openafs.org/mailman/listinfo/openafs-win32-devel</emphasis>
      </para>
      <para>User questions should be sent to the
        <ulink url='mailto:openafs-info@openafs.org?subject=OpenAFS%20for%20Windows%20User%20Question'>openafs-info@openafs.org</ulink> mailing list.  
      
      
      
      </para>
      <para>
        <emphasis role='bold'>https://lists.openafs.org/mailman/listinfo/openafs-info</emphasis>
      </para>
      <para>You must join the mailing lists if you wish to post to the list without incurring a moderation delay.</para>
    </section>
  </chapter>
  <chapter id='chap_7'>
    <title id='MSI_Deployment_Guide'>MSI Deployment Guide</title>
    <section>
      <title id='Introduction_to_MSI_Deployment'>7.1. Introduction</title>
      <para>A MSI installer option is available for those who wish to use Windows Installer for installing OpenAFS and for organizations that wish to deploy OpenAFS through Group Policy.  The first version of OpenAFS for Windows available as an MSI was 1.3.65.</para>
      <para>This document provides a guide for authoring transforms used to customize the MSI package for a particular organization.  Although many settings can be deployed via transforms, in an Active Directory environment it is advisable to deploy registry settings    and configuration files through group policy and/or startup scripts so that machines where OpenAFS for Windows is already installed will pick up these customizations.</para>
      <section>
        <title id='MSI_Deployment_Requirements'>7.1.1 Requirements</title>
        <para>The information in this document applies to MSI packages distributed with OpenAFS for Windows releases from 1.3.65 and onwards or MSI packages built from corresponding source releases.  Not all releases support all the configuration options documented here.</para>
        <para>Authoring a "Windows Installer" transform requires additional software for editing the MSI database tables and generating the transform from the modified MSI package.  ORCA.EXE and MSITRAN.EXE which are included in the Windows Platform SDK ("Windows Installer" SDK) can be used for this purpose.</para>
        <para>For reference, the schema for the MSI package is based on SCHEMA.MSI distributed with the Platform SDK.</para>
        <para>For general information about "Windows Installer", refer to:</para>
        <para>   
          <ulink url='http://msdn.microsoft.com/library/en-us/msi/setup/windows_installer_start_page.asp'>http://msdn.microsoft.com/library/en-us/msi/setup/windows_installer_start_page.asp</ulink>
        </para>
        <para>For general information about authoring MSI transforms, refer to:</para>
        <para>   
          <ulink url='http://msdn.microsoft.com/library/en-us/msi/setup/transforms.asp'>http://msdn.microsoft.com/library/en-us/msi/setup/transforms.asp</ulink>
        </para>
        <para>The remainder of this document assumes some familiarity with authoring transforms.  While the MSDN documentation for Windows Installer is a bit dense, the guide on MSI transforms found at the second link above is recommended reading.  MSDN also includes a step-by-step example for creating a transform at:</para>
        <para>   
          <ulink url='http://msdn.microsoft.com/library/en-us/msi/setup/a_customization_transform_example.asp'>http://msdn.microsoft.com/library/en-us/msi/setup/a_customization_transform_example.asp</ulink>
        </para>
      </section>
      <section>
        <title id='MSI_Authoring_Transforms'>7.1.2 Authoring a Transform</title>
        <para>Transforms describe a set of modifications to be performed on an existing MSI for the purpose of customizing it.  This is ordinarily done by making a copy of the MSI to be customized, modifying the copy and then using the old and the new MSI to generate a transform.  For example:</para>
        <orderedlist>
          <listitem>
            <para>copy openafs.msi openafs-modified.msi</para>
          </listitem>
          <listitem>
            <para>(edit the openafs-modified.msi to include the necessary changes)</para>
          </listitem>
          <listitem>
            <para>msitran -g openafs.msi openafs-modified.msi openafs-transform.mst</para>
          </listitem>
          <listitem>
            <para>(generates openafs-transform.mst, which is the transform)</para>
          </listitem>
        </orderedlist>
        <para>Transforms have an extension of .mst.  'msitran' is a tool distributed as part of the "Windows Installer" SDK (part of the Windows Platform SDK).</para>
        <para>You can test a transform by:</para>
        <orderedlist>
          <listitem>
            <para>copy openafs.msi openafs-test.msi</para>
          </listitem>
          <listitem>
            <para>msitran -a openafs-transform.mst openafs-test.msi</para>
          </listitem>
        </orderedlist>
        <para>and then checking the resulting openafs-test.msi to see if all changes you have made above to openafs-modified.msi is present in openafs-test.msi.  'msitran' will complain if some modification in the transform can not be successfully applied.</para>
        <para>As mentioned above, you can use a tool like ORCA.EXE to edit the MSI databases directly when editing openafs-modified.msi.  More details are given below.</para>
      </section>
    </section>
    <section>
      <title id='MSI_Configuration_Options'>7.2. Configuration Options</title>
      <para>The logic necessary to implement many of the settings described in
        <link linkend='appendix_a'>Appendix A</link> are present in the MSI.  Most of these can be controlled by setting the corresponding properties to the desired value.  Some settings may require modifying existing registry entries (though not recommended) or adding new resources (like files or registry keys).  Instructions for performing these tasks are below.
      
      
      
      </para>
      <section>
        <title id='MSI_Configurable_Properties'>7.2.1 Configurable Properties</title>
        <para>Most configurable properties correspond to registry keys or values.  Due to the logic invoked based on the existence of these registry keys or values, they are only set if the associated property is defined to have a non null value.  If the associated property is not defined in the MSI, the registry key or value will not be touched.  By default, the MSI does not contain these properties and hence will not set the registry keys.  You will need to add properties as needed to the MSI.</para>
        <para>When one of the configurable properties is set, the installer will use the property value to set the corresponding setting in the HKEY_LOCAL_MACHINE registry hive.  The HKEY_CURRENT_USER hive is not touched by the installer.</para>
        <para>For each property, the associated registry setting is referenced by the same text used in
          <link linkend='appendix_a'>Appendix A</link>.
        
        
        
        </para>
        <para>Strings are quoted using single quotes (e.g. 'a string'). An empty string is denoted as ''.  Note that you can't author null values into the 'Property' table.</para>
        <para>Numeric values should be authored as decimal strings.</para>
        <section>
          <title id='MSI_Setting_Properties'>7.2.1.1 Setting Properties</title>
          <para>In order to set a property,</para>
          <orderedlist>
            <listitem>
              <para>Open the MSI in ORCA.EXE</para>
            </listitem>
            <listitem>
              <para>Select the 'Property' table from the list of tables on the left.</para>
            </listitem>
            <listitem>
              <para>Find the property in the list of properties on the right, double click the value and type the new value.</para>
            </listitem>
            <listitem>
              <para>If the property does not exist in the property list, right click the list and select 'Add Row', type the property name and the desired value.</para>
            </listitem>
          </orderedlist>
        </section>
        <section>
          <title id='MSI_OAFW_Properties'>7.2.1.2 OpenAFS for Windows Properties</title>
          <informaltable frame='all'>
            <tgroup rowsep='1' align='left' colsep='1' cols='1'>
              <colspec colwidth='447pt' colname='c1' />
              <tbody>
                <row>
                  <entry>
                    <para>
                      <emphasis>(Service parameters):</emphasis>
                    </para>
                    <para>[HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\Parameters]</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
                      <emphasis>(Network provider):</emphasis>
                    </para>
                    <para>[HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider]</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
                      <emphasis>(OpenAFS Client):</emphasis>
                    </para>
                    <para>[HKLM\SOFTWARE\OpenAFS\Client]</para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
          <section>
            <title id='MSI_OAFW_Registry_Properties'>7.2.1.2.1 Registry Properties</title>
            <para>These properties are used to set the values of registry entries associated with OpenAFS for Windows.</para>
            <informaltable frame='all'>
              <tgroup rowsep='1' align='left' colsep='1' cols='1'>
                <colspec colwidth='447pt' colname='c1' />
                <tbody>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>AFSCACHEPATH</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_CachePath'>CachePath</link>
                      </para>
                      <para>Valid values    : string .</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>AFSCACHESIZE</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_CacheSize'>CacheSize</link>
                      </para>
                      <para>Valid values    : numeric</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>AFSCELLNAME</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_Cell'>Cell</link>
                      </para>
                      <para>Valid values    : string</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>FREELANCEMODE</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_FreelanceClient'>FreelanceClient</link>
                      </para>
                      <para>Valid values    : '1' or '0'</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>HIDEDOTFILES</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_HideDotFiles'>HideDotFiles</link>
                      </para>
                      <para>Valid values    : '1' or '0'</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>LOGONOPTIONS</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Domain_Specific_Regkeys'>(Network Provider)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_LogonOptions'>LogonOptions</link>
                      </para>
                      <para>Valid values    : '0', '1' or '3'</para>
                      <para>See
                        <link linkend='appendix_a'>Appendix A</link>
                        <link linkend='Domain_Specific_Configuration'>section 2.1 (Domain Specific Configuration keys for Network Provider)</link> for more details.
                      
                      
                      
                      </para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>MOUNTROOT</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_Mountroot'>Mountroot</link>
                      </para>
                      <para>Valid values    : string</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>NETBIOSNAME</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_NetbiosName'>NetbiosName</link>
                      </para>
                      <para>Valid values    : string (at most 15 characters)</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>NOFINDLANABYNAME</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_NoFindLanaByName'>NoFindLanaByName</link>
                      </para>
                      <para>Valid values    : '1' or '0'</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>RXMAXMTU</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_RxMaxMTU'>RxMaxMTU</link>
                      </para>
                      <para>Valid values    : numeric</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>SECURITYLEVEL</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_SecurityLevel'>SecurityLevel</link>
                      </para>
                      <para>Valid values    : '1' or '0'</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>SMBAUTHTYPE</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_smbAuthType'>SMBAuthType</link>
                      </para>
                      <para>Valid values    : '0','1' or '2'</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>STOREANSIFILENAMES</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Regkey_HKLM_SOFTWARE_OpenAFS_Client'>(OpenAFS Client)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_StoreAnsiFilenames'>StoreAnsiFilenames</link>
                      </para>
                      <para>Valid values    : '0' or '1'</para>
                      <para>This option is no longer supported as of 1.5.50 now that all file names are stored to AFS file servers using the UTF-8 encoding of Unicode.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>USEDNS</emphasis>
                      </para>
                      <para>Registry key    :
                        <link linkend='Service_Parameters'>(Service Parameters)</link>
                      </para>
                      <para>Registry value :
                        <link linkend='Value_UseDNS'>UseDNS</link>
                      </para>
                      <para>Valid values    : '1' or '0'</para>
                    </entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>
          </section>
          <section>
            <title id='MSI_OAFW_AFSCreds_Properties'>
               7.2.1.2.2 AFSCreds.exe Properties
            </title>
            <para>These properties are combined to add a command line option to the shortcut that will be created in the Start:Programs:OpenAFS and Start:Programs:Startup folders (see CREDSSTARTUP).  The method of specifying the option was chosen for easy integration with the Windows Installer user interface.  Although other methods can be used to specify options to AFSCREDS.EXE, it is advised that they be avoided as transforms including such options may not apply to future releases of OpenAFS.</para>
            <informaltable frame='all'>
              <tgroup rowsep='1' align='left' colsep='1' cols='1'>
                <colspec colwidth='447pt' colname='c1' />
                <tbody>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>CREDSSTARTUP</emphasis>
                      </para>
                      <para>Valid values    : '1' or '0'</para>
                      <para>Controls whether AFSCreds.exe starts up automatically when the user logs on.  When CREDSSTARTUP is '1' a shortcut is added to the 'Startup' folder in the 'Program menu' which starts AFSCREDS.EXE with the options that are determined by the other CREDS* properties.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>CREDSAUTOINIT</emphasis>
                      </para>
                      <para>Valid values    : '-a' or ''</para>
                      <para>Enables automatic initialization.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>CREDSIPCHDET</emphasis>
                      </para>
                      <para>Valid values    : '-n' or ''</para>
                      <para>Enables IP address change detection.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>CREDSQUIET</emphasis>
                      </para>
                      <para>Valid values    : '-q' or ''</para>
                      <para>Enables quiet mode.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>CREDSRENEWDRMAP</emphasis>
                      </para>
                      <para>Valid values    : '-m' or '’</para>
                      <para>Enables renewing drive map at startup.</para>
                    </entry>
                  </row>
                  <row>
                    <entry>
                      <para>
                        <emphasis role='bold'>CREDSSHOW</emphasis>
                      </para>
                      <para>Valid values    : '-s' or ''</para>
                      <para>Enables displaying the credential manager window when AFSCREDS starts up.</para>
                    </entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>
          </section>
        </section>
      </section>
      <section>
        <title id='MSI_Existing_Registry_Entries'>7.2.2 Existing Registry Entries</title>
        <para>You can change existing registry values subject to the restrictions mentioned in the Windows Platform SDK.  Pay special attention to component key paths and try to only change the 'Value' column in the 'Registry' table.  If you want to add additional registry keys please refer to section 3 (Additional resources).</para>
      </section>
      <section>
        <title id='MSI_Replacing_Configuration_Files'>7.2.3 Replacing Configuration Files</title>
        <para>The OpenAFS configuration files (CellServDB) can be replaced by your own configuration files.  These files are contained in separate MSI components so that you can disable them individually.</para>
        <para>The recommended method for replacing these files is to first disable the components containing the configuration files that you want to replace, and then add new components for the replacement files.  This is outlined below (assuming you are using ORCA.EXE to author the transform).</para>
        <para>Note that transforms are not a good way to add a new file as an embedded stream.  The method outlined here places the file in the same directory as the MSI for deployment.</para>
        <para>The walkthrough below is to add a custom 'CellServDB' file.</para>
        <orderedlist>
          <listitem>
            <para>Disable the component that contains the configuration file that you want to replace.</para>
            <orderedlist>
              <listitem>
                <para>Locate and select the 'Component' table in the 'Tables' list.</para>
              </listitem>
              <listitem>
                <para>In the Component table, locate the component you need to change ( Ctrl-F invokes the 'Find' dialog).  The component names are listed below in section
                  <link linkend='MSI_Configuration_File_Components'>7.2.3.1</link>.  For this example, the component name is 'elf_CellServDB'.
        
                
                
                </para>
              </listitem>
              <listitem>
                <para>Go to the 'Condition' column of the component.</para>
              </listitem>
              <listitem>
                <para>Enter a condition that evaluates to false. I.e. 'DONOTINSTALL'. (Note that an undefined property always evaluates to false).</para>
                <para>Note that you can also use this step to disable other configuration files without providing replacements.</para>
              </listitem>
            </orderedlist>
          </listitem>
          <listitem>
            <para>Add a new component containing the new configuration file.</para>
            <orderedlist>
              <listitem>
                <para>Select the 'Component' table in the 'Tables' list.</para>
              </listitem>
              <listitem>
                <para>Select 'Tables'-&gt;'Add Row' (Ctrl-R).</para>
              </listitem>
              <listitem>
                <para>Enter the following :</para>
                <informaltable frame='all'>
                  <tgroup rowsep='1' align='left' colsep='1' cols='2'>
                    <colspec colwidth='84pt' colname='c1' />
                    <colspec colwidth='318pt' colname='c2' />
                    <tbody>
                      <row>
                        <entry>
                          <para>Component</para>
                        </entry>
                        <entry>
                          <para>cmf_my_CellServDB</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>ComponentID</para>
                        </entry>
                        <entry>
                          <para>{7019836F-BB2C-4AF6-9463-0D6EC9035CF1}</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Directory_</para>
                        </entry>
                        <entry>
                          <para>dirClient</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Attributes</para>
                        </entry>
                        <entry>
                          <para>144</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Condition</para>
                        </entry>
                        <entry>
                          <para> </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>KeyPath</para>
                        </entry>
                        <entry>
                          <para>fil_my_CellServDB</para>
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </informaltable>
                <para>Note that the ComponentId is an uppercase GUID.  You can generate one using GUIDGEN.EXE or UUIDGEN.EXE, both of which are included in the Platform SDK.</para>
                <para>The Attributes value of 144 is a sum of msidbComponentAttributesPermanent (16) and msidbComponentAttributesNeverOverwrite (128).  This ensures that local modifications are not overwritten or lost during an installation or uninstallation.  These are the same settings used on the default configuration files.</para>
                <para>            'fil_my_CellServDB' is a key into the 'File' table which we will fill later.</para>
              </listitem>
            </orderedlist>
          </listitem>
          <listitem>
            <para>Add a new feature to hold the new component.</para>
            <orderedlist>
              <listitem>
                <para>Select the 'Feature' table.</para>
              </listitem>
              <listitem>
                <para>Add a new row (Ctrl-R or 'Tables'-&gt;'Add Row') with the following values:</para>
                <informaltable frame='all'>
                  <tgroup rowsep='1' align='left' colsep='1' cols='2'>
                    <colspec colwidth='94pt' colname='c1' />
                    <colspec colwidth='307pt' colname='c2' />
                    <tbody>
                      <row>
                        <entry>
                          <para>Feature</para>
                        </entry>
                        <entry>
                          <para>fea_my_CellServDB</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Feature_Parent</para>
                        </entry>
                        <entry>
                          <para>feaClient</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Title</para>
                        </entry>
                        <entry>
                          <para> </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Description</para>
                        </entry>
                        <entry>
                          <para> </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Display</para>
                        </entry>
                        <entry>
                          <para>0</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Level</para>
                        </entry>
                        <entry>
                          <para>30</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Directory_</para>
                        </entry>
                        <entry>
                          <para> </para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Attributes</para>
                        </entry>
                        <entry>
                          <para>8</para>
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </informaltable>
                <para>It is important to create the new feature under the 'feaClient' feature, which will ensure that the configuration file will be installed when the client binaries are installed.</para>
                <para>Setting 'Display' to 0 will hide this feature from the feature selection dialog during an interactive installation.  A value of 30 for 'Level' allows this feature to be installed by default (on a 'Typical' installation).</para>
                <para>The 'Attributes' value is msidbFeatureAttributesDisallowAdvertise (8), which is set on all features in the OpenAFS MSI.  The OpenAFS MSI is not designed for an advertised installation.</para>
              </listitem>
            </orderedlist>
          </listitem>
          <listitem>
            <para>Join the component and the feature.</para>
            <orderedlist>
              <listitem>
                <para>Select the 'FeatureComponents' table.</para>
              </listitem>
              <listitem>
                <para>Add a new row with the following values:</para>
                <informaltable frame='all'>
                  <tgroup rowsep='1' align='left' colsep='1' cols='2'>
                    <colspec colwidth='90pt' colname='c1' />
                    <colspec colwidth='312pt' colname='c2' />
                    <tbody>
                      <row>
                        <entry>
                          <para>Feature</para>
                        </entry>
                        <entry>
                          <para>fea_my_CellServDB</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Component</para>
                        </entry>
                        <entry>
                          <para>cmf_my_CellServDB</para>
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </informaltable>
              </listitem>
            </orderedlist>
          </listitem>
          <listitem>
            <para>Add an entry to the 'File' table.</para>
            <orderedlist>
              <listitem>
                <para>Select the 'File' table.</para>
              </listitem>
              <listitem>
                <para>Add a new row with the following values:</para>
                <informaltable frame='all'>
                  <tgroup rowsep='1' align='left' colsep='1' cols='2'>
                    <colspec colwidth='91pt' colname='c1' />
                    <colspec colwidth='311pt' colname='c2' />
                    <tbody>
                      <row>
                        <entry>
                          <para>File</para>
                        </entry>
                        <entry>
                          <para>fil_my_CellServDB</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Component_</para>
                        </entry>
                        <entry>
                          <para>cmf_my_CellServDB</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>FileName</para>
                        </entry>
                        <entry>
                          <para>CellServDB</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>FileSize</para>
                        </entry>
                        <entry>
                          <para>(enter file size here)</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Attributes</para>
                        </entry>
                        <entry>
                          <para>8192</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>Sequence</para>
                        </entry>
                        <entry>
                          <para>1000</para>
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </informaltable>
                <para>                (leave other fields blank)</para>
                <para>The 'Attributes' value is msidbFileAttributesNonCompressed (8192).  This is because we will be placing this file in the same directory as the MSI instead of embedding the file in it.  Transforms do not support updating compressed sources or adding new cabinet streams.</para>
                <para>Finally, the 'Sequence' value of 1000 will be used later to distinguish the file as being in a separate source location than the other files in the MSI.</para>
              </listitem>
            </orderedlist>
          </listitem>
          <listitem>
            <para>Set a media source for the file.</para>
            <orderedlist>
              <listitem>
                <para>Select the 'Media' table.</para>
              </listitem>
              <listitem>
                <para>Add a row with the following values :</para>
                <informaltable frame='all'>
                  <tgroup rowsep='1' align='left' colsep='1' cols='2'>
                    <colspec colwidth='93pt' colname='c1' />
                    <colspec colwidth='309pt' colname='c2' />
                    <tbody>
                      <row>
                        <entry>
                          <para>DiskId</para>
                        </entry>
                        <entry>
                          <para>2</para>
                        </entry>
                      </row>
                      <row>
                        <entry>
                          <para>LastSequence</para>
                        </entry>
                        <entry>
                          <para>1000</para>
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </informaltable>
                <para>                (leave other fields blank)</para>
                <para>The sequence number of 1000 designates this as the media source for the newly added file.
        </para>
              </listitem>
            </orderedlist>
          </listitem>
        </orderedlist>
        <section>
          <title id='MSI_Configuration_File_Components'>7.2.3.1 Components for Configuration Files</title>
          <para>CellServDB: 'cpf_CellServDB' (ID {D5BA4C15-DBEC-4292-91FC-B54C30F24F2A})</para>
        </section>
      </section>
      <section>
        <title id='MSI_Adding_Domain_Specific_Registry_Keys'>7.2.4 Adding Domain Specific Registry Keys</title>
        <para>Following is an example for adding domain specific registry keys.</para>
        <para>    Refer to
          <link linkend='appendix_a'>Appendix A</link> section 2.1 for more information.
        
        
        
        </para>
        <para>    Columns that are unspecified should be left empty.</para>
        <para>    We create a new feature and component to hold the new registry keys.</para>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='448pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>    'Feature' table:</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Feature            : 'feaDomainKeys'
            Feature Parent : 'feaClient'
            Display           : 0
            Level               : 30
            Attributes        : 10</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>    'Component' table:</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Component     : 'rcm_DomainKeys'
            ComponentId  : '{4E3FCBF4-8BE7-40B2-A108-C47CF743C627}'
            Directory         : 'TARGETDIR'
            Attributes        : 4
            KeyPath          : 'reg_domkey0'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>    'FeatureComponents' table:</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Feature            : 'feaDomainKeys'
            Component     : 'rcm_DomainKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>    'Registry' table:</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_domkey0'
            Root                : 2
            Key                 : 'SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain'
            Component     : 'rcm_DomainKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_domkey1'
            Root                : 2
            Key                 : 'SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain'
            Name              : '*'
            Component     : 'rcm_DomainKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_domkey2'
            Root                : 2
            Key                 : 'SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain\ATHENA.MIT.EDU'
            Name              : '*'
            Component     : 'rcm_DomainKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_domkey3'
            Root                : 2
            Key                 : 'SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain\ATHENA.MIT.EDU'
            Name              : 'LogonOptions'
            Value              : 1
            Component     : 'rcm_DomainKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_domkey4'
            Root                : 2
            Key                 : SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain\LOCALHOST'
            Name              : '*'
            Component     : 'rcm_DomainKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_domkey5'
            Root                : 2
            Key                 : 'SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain\LOCALHOST'
            Name              : 'LogonOptions'
            Value              : 0
            Component     : 'rcm_DomainKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_domkey6'
            Root                : 2
            Key                 : 'SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain\LOCALHOST'
            Name              : 'FailLoginsSilently'
            Value              : 1
            Component     : 'rcm_DomainKeys'</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <para> </para>
        <para>The example adds domain specific keys for 'ATHENA.MIT.EDU' (enable integrated logon) and 'LOCALHOST' (disable integrated logon and fail logins silently).</para>
      </section>
      <section>
        <title id='MSI_Adding_Site_Specific_Freelance_Registry_Keys'>7.2.5 Adding Site Specific Freelance Registry Keys</title>
        <para>Following is an example for adding site specific Freelance registry keys to pre-populate the Mountpoints and Symlinks in the fake root.afs volume.</para>
        <para>    Columns that are unspecified should be left empty.</para>
        <para>    We create a new feature and component to hold the new registry keys.</para>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>    'Feature' table:</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Feature            : 'feaFreelanceKeys'
            Feature Parent : 'feaClient'
            Display           : 0
            Level               : 30
            Attributes        : 10</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>    'Component' table:</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Component     : 'rcm_FreelanceKeys'
            ComponentId  : '{4E3B3CBF4-9AE7-40C3-7B09-C48CF842C583}'
            Directory         : 'TARGETDIR'
            Attributes        : 4
            KeyPath          : 'reg_freekey0'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>    'FeatureComponents' table:</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Feature            : 'feaFreelanceKeys'
            Component     : 'rcm_FreelanceKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>    'Registry' table:</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_freekey0'
            Root                : 2
            Key                 : 'SOFTWARE\OpenAFS\Client\Freelance'
            Component     : 'rcm_FreelanceKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_freekey1'
            Root                : 2
            Key                 : 'SOFTWARE\OpenAFS\Client\Freelance'
            Name              : '0'
            Value              : 'athena.mit.edu#athena.mit.edu:root.cell.'
            Component     : 'rcm_FreelanceKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_freekey2'
            Root                : 2
            Key                 : 'SOFTWARE\OpenAFS\Client\Freelance'
            Name              : '1'
            Value              : '.athena.mit.edu%athena.mit.edu:root.cell.'
            Component     : 'rcm_FreelanceKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_freekey3'
            Root                : 2
            Key                 : 'SOFTWARE\OpenAFS\Client\Freelance\Symlinks'
            Component     : 'rcm_FreelanceKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_freekey4'
            Root                : 2
            Key                 : 'SOFTWARE\OpenAFS\Client\Freelance\Symlinks'
            Name              : '0'
            Value              : 'athena:athena.mit.edu.'
            Component     : 'rcm_FreelanceKeys'</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>            (new row)
            Registry          : 'reg_freekey5'
            Root                : 2
            Key                 : 'SOFTWARE\OpenAFS\Client\Freelance\Symlinks'
            Name              : '1'
            Value              : '.athena:.athena.mit.edu.'
            Component     : 'rcm_FreelanceKeys'</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
        <para>The example adds a read-only mountpoint to the athena.mit.edu cell's root.afs volume as well as a read-write mountpoint.  Aliases are also provided using symlinks.
        </para>
      </section>
    </section>
    <section>
      <title id='Additional_Resources'>7.3 Additional Resources</title>
      <para>If you want to add registry keys or files you need to create new components and features for those.  Refer to the Windows Platform SDK for details.</para>
      <para>It is beyond the scope of this document to provide a comprehensive overview of how to add new resources through a transform.  Please refer to the "Windows Installer" documentation for details.  The relevant section is at :</para>
      <para>http://msdn.microsoft.com/library/en-us/msi/setup/using_transforms_to_add_resources.asp</para>
      <para>A sample walkthrough of adding a new configuration file is in section 2.3.</para>
      <para>Add new features under the 'feaClient' or 'feaServer' as appropriate and set the 'Level' column for those features to equal the 'Level' for their parent features for consistency.  Note that none of the features in the OpenAFS for Windows MSI package are designed to be installed to run from 'source' or 'advertised'.  It is recommended that you set 'msidbFeatureAttributesFavorLocal' (0), 'msidbFeatureAttributesFollowParent' (2) and 'msidbFeatureAttributesDisallowAdvertise' (8) attributes for new features.</para>
      <para>If you are creating new components, retain the same component GUID when creating new transforms against new releases of the OpenAFS MSI package.</para>
      <para>After making the adjustments to the MSI database using ORCA.EXE you can generate a transform with MSITRAN.EXE as follows :</para>
      <para>(Modified MSI package is 'openafs-en_US_new.msi' and the original MSI package is 'openafs-en_US.msi'.  Generates transform 'openafs-transform.mst')</para>
      <para>    &gt; msitran.exe -g openafs-en_US.msi openafs-en_US_new.msi openafs-transform.mst</para>
      <para>See the Platform SDK documentation for information on command line options for MSITRAN.EXE.</para>
    </section>
    <section>
      <title id='Upgrades'>7.4. Upgrades</title>
      <para>The MSI package is designed to uninstall previous versions of OpenAFS for Windows during installation.  Note that it doesn't directly upgrade an existing installation.  This is intentional and ensures that development releases which do not have strictly increasing version numbers are properly upgraded.</para>
      <para>Versions of OpenAFS that are upgraded by the MSI package are:</para>
      <orderedlist>
        <listitem>
          <para>OpenAFS MSI package</para>
          <para>Upgrade code {6823EEDD-84FC-4204-ABB3-A80D25779833}</para>
          <para>Up to current release</para>
        </listitem>
        <listitem>
          <para>MIT's Transarc AFS MSI package</para>
          <para>Upgrade code {5332B94F-DE38-4927-9EAB-51F4A64193A7}</para>
          <para>Up to version 3.6.2</para>
        </listitem>
        <listitem>
          <para>OpenAFS NSIS package</para>
          <para>All versions</para>
        </listitem>
      </orderedlist>
      <para>Note that versions of the OpenAFS NSIS package prior to 1.3.65 had a bug where it couldn't be uninstalled properly in unattended mode.  Therefore the MSI package will not try to uninstall an OpenAFS NSIS package if running unattended.  This means that group policy based deployments will fail on machines that have the OpenAFS NSIS package installed.</para>
      <para>If you have used a different MSI package to install OpenAFS and wish to upgrade it you can author rows into the 'Upgrade' table as described in the Platform SDK.</para>
      <para>When performing an upgrade with msiexec.exe execute the MSI with the repair options "vomus".</para>
    </section>
  </chapter>
  <chapter id='appendix_a' label='Appendix A'>
    <title id='Registry_Values'>Registry Values</title>
    <section>
      <title id='Service_Parameters'>A.1. Service parameters</title>
      <para>The service parameters primarily affect the behavior of the AFS client service (afsd_service.exe).</para>
      <section>
        <title id='Regkey_TransarcAFSDaemon_Parameters'>Regkey: [HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\Parameters]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='448pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: LANadapter</emphasis>
                  </para>
                  <para>Type: DWORD</para>
                  <para>Default: -1</para>
                  <para>Variable: LANadapter</para>
                  <para>LAN adapter number to use.  This is the lana number of the LAN adapter that the SMB server should bind to.  If unspecified or set to -1, a LAN adapter with named 'AFS' or a loopback adapter will be selected.  If neither are present, then all available adapters will be bound to.  When binding to a non-loopback adapter, the NetBIOS name hostname%-AFS' will be used (where %hostname% is the NetBIOS name of the host truncated to 11 characters). Otherwise, the NetBIOS name will be 'AFS'.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_CacheSize' />
                    <emphasis>Value: CacheSize</emphasis>
                  </para>
                  <para>Type: DWORD</para>
                  <para>Default: 98304 (CM_CONFIGDEFAULT_CACHESIZE)</para>
                  <para>Variable: cm_initParams.cacheSize</para>
                  <para>Size of the AFS cache in 1k blocks.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: ChunkSize</emphasis>
                  </para>
                  <para>Type: DWORD</para>
                  <para>Default: 20 (CM_CONFIGDEFAULT_CHUNKSIZE)</para>
                  <para>Variable: cm_logChunkSize (cm_chunkSize = 1 &lt;&lt; cm_logChunkSize)</para>
                  <para>Size of chunk for reading and writing. Actual chunk size is 2^cm_logChunkSize. The default chunk size is therefore 1 MB.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: Daemons</emphasis>
                  </para>
                  <para>Type: DWORD</para>
                  <para>Default: 4 (CM_CONFIGDEFAULT_DAEMONS)</para>
                  <para>Variable: numBkgD</para>
                  <para>Number of background daemons (number of threads of cm_BkgDaemon). (see cm_BkgDaemon in cm_daemon.c)</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: ServerThreads</emphasis>
                  </para>
                  <para>Type: DWORD</para>
                  <para>Default: 25 (CM_CONFIGDEFAULT_SVTHREADS)</para>
                  <para>Variable: numSvThreads</para>
                  <para>Number of SMB server threads (number of threads of smb_Server). (see smb_Server in smb.c).</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_Stats' />
                    <emphasis>Value: Stats</emphasis>
                  </para>
                  <para>Type: DWORD</para>
                  <para>Default: 10000 (CM_CONFIGDEFAULT_STATS)</para>
                  <para>Variable: cm_initParams.nStatCaches</para>
                  <para>Cache configuration.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: Volumes</emphasis>
                  </para>
                  <para>
                       Type: DWORD
                  </para>
                  <para>
Default:  3333 (CM_CONFIGDEFAULT_STATS/3)
                  </para>
                  <para>
Variable: cm_initParams.nVolumes</para>
                  <para>
                    <emphasis>Cache configuration.</emphasis>
                  </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: Cells</emphasis>
                  </para>
                  <para>Type: DWORD
                  </para>
                  <para>
Default: 1024 (CM_CONFIGDEFAULT_CELLS)
                  </para>
                  <para>
Variable: cm_initParams.nCells</para>
                  <para>
                    <emphasis>Cache configuration.</emphasis>
                  </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_LogoffPreserveTokens' />
                    <emphasis>Value: LogoffPreserveTokens</emphasis>
                  </para>
                  <para>Type: DWORD {1,0}
                  </para>
                  <para>
Default : 0</para>
                  <para>If enabled (set to 1), the Logoff Event handler will not attempt to delete the user's tokens  if the user's profile is stored outside of AFS.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: RootVolume</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: "root.afs"
                  </para>
                  <para>
Variable: cm_rootVolumeName</para>
                  <para>Root volume name.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_Mountroot' />
                    <emphasis>Value: MountRoot</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: "/afs"
                  </para>
                  <para>
Variable: cm_mountRoot</para>
                  <para>Name of root mount point.  In symlinks, if a path starts with cm_mountRoot, it is assumed that the path is absolute (as opposed to relative) and is adjusted accordingly. Eg: if a path is specified as /afs/athena.mit.edu/foo/bar/baz and cm_mountRoot is "/afs", then the path is interpreted as \\afs\all\athena.mit.edu\foo\bar\baz.  If a path does not start with with cm_mountRoot, the path is assumed to be relative and suffixed to the reference directory (i.e. directory where the symlink exists)</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_CachePath' />
                    <emphasis>Value: CachePath</emphasis>
                  </para>
                  <para>Type: REG_SZ or REG_EXPAND_SZ
                  </para>
                  <para>
Default: "%TEMP%\AFSCache"
                  </para>
                  <para>
Variable: cm_CachePath</para>
                  <para>Location of on-disk cache file.  The default is the SYSTEM account's TEMP directory.  The attributes assigned to the file are HIDDEN and SYSTEM.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_NonPersistentCaching' />
                    <emphasis>Value: NonPersistentCaching</emphasis>
                  </para>
                  <para>Type: DWORD [0..1]
                  </para>
                  <para>
Default: 0
                  </para>
                  <para>
Variable: buf_CacheType</para>
                  <para>When this registry value is set to a non-zero value, the CachePath value is ignored and the cache data is stored in the windows paging file.  This disables the use of persistent caching and the ability to maintain a single UUID for the AFS client service across restarts.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: ValidateCache</emphasis>
                  </para>
                  <para>Type: DWORD [0..2]
                  </para>
                  <para>
Default: 1
                  </para>
                  <para>
Variable: buf_CacheType</para>
                  <para>This value determines if and when persistent cache validation is performed.</para>
                  <para>
                    <simplelist>
                      <member>0 - Validation is disabled</member>
                      <member>1 - Validation is performed at startup</member>
                      <member>2 - Validation is performed at shutdown</member>
                    </simplelist>
                  </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: TrapOnPanic</emphasis>
                  </para>
                  <para>Type: DWORD {1,0}
                  </para>
                  <para>
Default: 0
                  </para>
                  <para>
Variable: traceOnPanic</para>
                  <para>Issues a breakpoint in the event of a panic. (breakpoint: _asm int 3).</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_NetbiosName' />
                    <emphasis>Value: NetbiosName</emphasis>
                  </para>
                  <para>Type: REG_EXPAND_SZ
                  </para>
                  <para>
Default: "AFS"
                  </para>
                  <para>
Variable: cm_NetbiosName</para>
                  <para>Specifies the NetBIOS name to be used when binding to a Loopback adapter.  To provide the old behavior specify a value of  "%COMPUTERNAME%-AFS".</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: IsGateway</emphasis>
                  </para>
                  <para>Type: DWORD {1,0}
                  </para>
                  <para>
Default: 0
                  </para>
                  <para>
Variable: isGateway</para>
                  <para>Select whether or not this AFS client should act as a gateway.  If set and the NetBIOS name hostname-AFS is bound to a physical NIC, other machines in the subnet can access AFS via SMB connections to hostname-AFS.</para>
                  <para>When IsGateway is non-zero, the LAN adapter detection code will avoid binding to a loopback adapter.  This will ensure that the NetBIOS name will be of the form hostname-AFS instead of the value set by the "NetbiosName" registry value.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: ReportSessionStartups</emphasis>
                  </para>
                  <para>Type: DWORD {1,0}
                  </para>
                  <para>
Default: 0
                  </para>
                  <para>
Variable: reportSessionStartups</para>
                  <para>If enabled, all SMB sessions created are recorded in the Application event log.  This also enables other events such as drive mappings or various error types to be logged.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_TraceBufferSize' />
                    <emphasis>Value: TraceBufferSize</emphasis>
                  </para>
                  <para>Type: DWORD
                  </para>
                  <para>
Default: 10000 (CM_CONFIGDEFAULT_TRACEBUFSIZE)
                  </para>
                  <para>
Variable: traceBufSize</para>
                  <para>Number of entries to keep in trace log.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_SysName' />
                    <emphasis>Value: SysName</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: &quot;x86_win32 i386_w2k i386_nt40&quot; (X86) 
                  </para>
                  <para>
&quot;amd64_win64 x86_win32 i386_w2k&quot; (AMD64)
                  </para>
                  <para>
Variable: cm_sysName</para>
                  <para>Provides an initial value for "fs sysname".  The string can contain one or more replacement values for @sys in order of preference separated by whitespace.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_SecurityLevel' />
                    <emphasis>Value: SecurityLevel</emphasis>
                  </para>
                  <para>Type: DWORD {1,0}
                  </para>
                  <para>
Default: 0
                  </para>
                  <para>
Variable: cryptall</para>
                  <para>Enables encryption on RX calls.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_UseDNS' />
                    <emphasis>Value: UseDNS</emphasis>
                  </para>
                  <para>Type: DWORD {1,0}
                  </para>
                  <para>
Default: 1
                  </para>
                  <para>
Variable: cm_dnsEnabled</para>
                  <para>Enables resolving volservers using AFSDB DNS queries.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_FreelanceClient' />
                    <emphasis>Value: FreelanceClient</emphasis>
                  </para>
                  <para>Type: DWORD {1,0}
                  </para>
                  <para>
Default: 0
                  </para>
                  <para>
Variable: cm_freelanceEnabled</para>
                  <para>Enables freelance client.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_HideDotFiles' />
                    <emphasis>Value: HideDotFiles</emphasis>
                  </para>
                  <para>Type: DWORD {1,0}
                  </para>
                  <para>
Default: 1
                  </para>
                  <para>
Variable: smb_hideDotFiles</para>
                  <para>Enables marking dotfiles with the hidden attribute.  Dot files are files whose name starts with a period (excluding "." and "..").</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: MaxMpxRequests</emphasis>
                  </para>
                  <para>Type: DWORD
                  </para>
                  <para>
Default: 50
                  </para>
                  <para>
Variable: smb_maxMpxRequests</para>
                  <para>Maximum number of multiplexed SMB requests that can be made.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: MaxVCPerServer</emphasis>
                  </para>
                  <para>Type: DWORD
                  </para>
                  <para>
Default: 100
                  </para>
                  <para>
Variable: smb_maxVCPerServer</para>
                  <para>Maximum number of SMB virtual circuits.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_Cell' />
                    <emphasis>Value: Cell</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: &lt;none&gt;
                  </para>
                  <para>
Variable: rootCellName</para>
                  <para>Name of root cell (the cell from which root.afs should be mounted in \\afs\all).</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: RxEnablePeerStats</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 1
                  </para>
                  <para>
Variable: rx_enable_peer_stats</para>
                  <para>When set to 1, the Rx library collects peer statistics.</para>
                  <para> </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: RxEnableProcessStats</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 1
                  </para>
                  <para>
Variable: rx_extra_process_stats</para>
                  <para>When set to 1, the Rx library collects process statistics.</para>
                  <para> </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: RxExtraPackets</emphasis>
                  </para>
                  <para>Type: DWORD 
                  </para>
                  <para>
Default: 120
                  </para>
                  <para>
Variable: rx_extraPackets</para>
                  <para>When set, this number of extra Rx packets are allocated at startup.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_RxMaxMTU' />
                    <emphasis>Value: RxMaxMTU</emphasis>
                  </para>
                  <para>Type: DWORD
                  </para>
                  <para>
Default: 0
                  </para>
                  <para>
Variable: rx_mtu</para>
                  <para>If set to anything other than 0, that value is used as the maximum send and receive MTU supported by the RX interface.</para>
                  <para>In order to enable OpenAFS to operate across releases of the Cisco IPSec VPN client prior than 5.0, this value must be set to 1264 or smaller.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: RxNoJumbo</emphasis>
                  </para>
                  <para>Type: DWORD {0,1}
                  </para>
                  <para>
Default: 0
                  </para>
                  <para>
Variable: rx_nojumbo</para>
                  <para>If enabled, does not send or indicate that we are able to send or receive RX jumbograms.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_ConnDeadTimeout' />
                    <emphasis>Value: ConnDeadTimeout</emphasis>
                  </para>
                  <para>Type: DWORD
                  </para>
                  <para>
Default: 0 (seconds)
                  </para>
                  <para>
Variable: ConnDeadtimeout</para>
                  <para>When the value is 0, this setting is configured to be one-half the HardDeadTimeout value.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: HardDeadTimeout</emphasis>
                  </para>
                  <para>Type: DWORD
                  </para>
                  <para>
Default: 0 (seconds)
                  </para>
                  <para>
Variable: HardDeadtimeout</para>
                  <para>The Hard Dead Time is enforced to be at least double the ConnDeadTimeout.  The provides an opportunity for at least one retry. </para>
                  <para>The value 0 seconds means that the real timeout should be set to be equal to the minimum SMB timeout which can be configured in the registry at: </para>
                  <para></para>
                  <para>  [HKLM\SYSTEM\CurrentControlSet\Services\lanmanworkstation\parameters]</para>
                  <para>    SessTimeout</para>
                  <para></para>
                  <para>If the minimum SMB timeout is not specified the value is 45 seconds.  See
                    <ulink url='http://support.microsoft.com/support/kb/articles/Q102/0/67.asp'>http://support.microsoft.com:80/support/kb/articles/Q102/0/67.asp</ulink>
                  </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_TraceOption' />
                    <emphasis>Value: TraceOption</emphasis>
                  </para>
                  <para>Type: DWORD {0-15}
                  </para>
                  <para>
Default: 0</para>
                  <para>Enables logging of debug output to the Windows Event Log.</para>
                  <para>Bit 0 enables logging of "Logon Events" processed by the Network Provider and Winlogon Event Notification Handler.  </para>
                  <para>Bit 1 enables logging of events captured by the AFS Client Service.</para>
                  <para>Bit 2 enables real-time viewing of "fs trace" logging with DbgView or similar tools.</para>
                  <para>Bit 3 enables "fs trace" logging on startup.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: AllSubmount</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 1</para>
                  <para>Variable: allSubmount (smb.c)</para>
                  <para>By setting this value to 0, the "\\NetbiosName\all" mount point will not be created.  This allows the read-write versions of root.afs to be hidden.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_NoFindLanaByName' />
                    <emphasis>Value: NoFindLanaByName</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 0</para>
                  <para>Disables the attempt to identity the network adapter to use by looking for an adapter with a display name of "AFS".</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: MaxCPUs</emphasis>
                  </para>
                  <para>Type: DWORD {1..32} or {1..64} depending on the architecture
                  </para>
                  <para>
Default: &lt;no default&gt;</para>
                  <para>If this value is specified, afsd_service.exe will restrict itself to executing on the specified number of CPUs if there are a greater number installed in the machine.  </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_smbAuthType' />
                    <emphasis>Value: smbAuthType</emphasis>
                  </para>
                  <para>Type: DWORD {0..2}
                  </para>
                  <para>
Default: 2</para>
                  <para>If this value is specified, it defines the type of SMB authentication which must be present in order for the Windows SMB client to connect to the AFS Client Service's SMB server.  The values are:</para>
                  <para>0 = No authentication required
                  </para>
                  <para>
                    <simplelist>
                      <member>
1 = NTLM authentication required
</member>
                      <member>
2 = Extended (GSS SPNEGO) authentication required
</member>
                    </simplelist>
                  </para>
                  <para>
The default is Extended authentication</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_MaxLogSize' />
                    <emphasis>Value: MaxLogSize</emphasis>
                  </para>
                  <para>Type: DWORD {0 .. MAXDWORD}
                  </para>
                  <para>
Default: 100K</para>
                  <para>This entry determines the maximum size of the %WINDIR%\TEMP\afsd_init.log file.  If the file is larger than this value when afsd_service.exe starts the file will be reset to 0 bytes.  If this value is 0, it means the file should be allowed to grow indefinitely.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: FlushOnHibernate</emphasis>
                  </para>
                  <para>Type: DWORD {0,1}
                  </para>
                  <para>
Default: 1</para>
                  <para>If set, flushes all volumes before the machine goes on hibernate or stand-by.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: daemonCheckDownInterval</emphasis>
                  </para>
                  <para>Type: DWORD (seconds)
                  </para>
                  <para>
Default: 180</para>
                  <para>This value controls how frequently the AFS cache manager probes servers that are marked as &quot;down&quot;.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: daemonCheckUpInterval</emphasis>
                  </para>
                  <para>Type: DWORD (seconds)
                  </para>
                  <para>
Default: 600</para>
                  <para>This value controls how frequently the AFS cache manager probes servers that are marked as &quot;up&quot;.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: daemonCheckVolInterval</emphasis>
                  </para>
                  <para>Type: DWORD (seconds)
                  </para>
                  <para>
Default: 3600</para>
                  <para>This value controls how frequently the AFS cache manager forces a reset on the existing volume database information.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: daemonCheckCBInterval</emphasis>
                  </para>
                  <para>Type: DWORD (seconds)
                  </para>
                  <para>
Default: 60</para>
                  <para>This value controls how frequently the AFS cache manager checks for callback invalidation.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: daemonCheckLockInterval</emphasis>
                  </para>
                  <para>Type: DWORD (seconds)
                  </para>
                  <para>
Default: 60</para>
                  <para>This value controls how frequently the AFS cache manager checks for invalid file locks.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: daemonCheckTokenInterval</emphasis>
                  </para>
                  <para>Type: DWORD (seconds)
                  </para>
                  <para>
Default: 180</para>
                  <para>This value controls how frequently the AFS cache manager checks for expired tokens.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: daemonCheckOfflineVolInterval</emphasis>
                  </para>
                  <para>Type: DWORD (seconds)
                  </para>
                  <para>
Default: 600</para>
                  <para>This value controls how frequently the AFS cache manager checks offline volumes to see if they have come back online.  At the same time volumes which were determined to be busy have their state reset to online.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: CallBackPort</emphasis>
                  </para>
                  <para>Type: DWORD
                  </para>
                  <para>
Default: 7001</para>
                  <para>This value specifies which port number should be used for receiving callbacks from the file server.  The standard AFS Callback port is 7001.  Alternative values can be useful if the client is behind a NAT and a permanent port mapping for the client is being configured.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_EnableServerLocks' />
                    <emphasis>Value: EnableServerLocks</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1, 2}
                  </para>
                  <para>
Default: 1</para>
                  <para>Determines whether or not the AFS file server is contacted for </para>
                  <para>0: never obtain server locks</para>
                  <para>1: obtain server locks unless the file server says not to</para>
                  <para>2: always obtain server locks</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: DeleteReadOnly</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 0</para>
                  <para>Determines whether or not the AFS Cache Manager will permit files marked with the &quot;Read Only&quot; DOS attribute to be deleted or not.  For compatibility with Explorer, the default is ‘no’.</para>
                  <para>0: do not permit &quot;Read Only&quot; files to be deleted.</para>
                  <para>1: delete files that have the &quot;Read Only&quot; attribute set without complaint.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: BPlusTrees</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 1</para>
                  <para>Determines whether or not the AFS Cache Manager uses locally constructed B+ Trees to speed up the performance of directory searches.  </para>
                  <para>0: do not use B+ Trees for directory lookups</para>
                  <para>1: use B+ Trees for directory lookups</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: PrefetchExecutableExtensions</emphasis>
                  </para>
                  <para>Type: MULTI_SZ 
                  </para>
                  <para>
Default: none specified</para>
                  <para>The AFS Cache Manager will pre-fetch the entire contents of any file whose name matches ends with one of the specified extensions.  This option is intended for use primarily with executables and dynamic link libraries that should be fully cached prior to a machine losing its connection with the file server.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: OfflineReadOnlyIsValid</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 0</para>
                  <para>Determines whether or not cached data from .readonly volumes is considered valid even if a callback cannot be registered with a file server.  This option is meant to be used by organizations for whom .readonly volume content very rarely changes (if ever.)</para>
                  <para>0: do not treat offline .readonly content as valid</para>
                  <para>1: treat offline .readonly content as valid</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: GiveUpAllCallBacks</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 0</para>
                  <para>Determines whether or not the AFS Cache Manager will give up all callbacks prior to the service being suspended or shutdown.  Doing so will have significant performance benefits for the file servers.  However, file servers older than 1.4.6 can become unstable if the GiveUpAllCallBacks RPC is executed.</para>
                  <para>0: do not perform GiveUpAllCallBacks RPCs</para>
                  <para>1: perform GiveUpAllCallBacks RPCs </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: FollowBackupPath</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 0</para>
                  <para>Determines whether or not the AFS Cache Manager will give preference to .backup volumes when following mount points that originate in a .backup volume.</para>
                  <para>0: do not prefer .backup volumes when the mount point originates in a .backup volume.</para>
                  <para>1: prefer .backup volumes when the mount point originates in a .backup volume.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: RxUdpBufSize</emphasis>
                  </para>
                  <para>Type: DWORD {bytes}
                  </para>
                  <para>
Default: 262144</para>
                  <para>Specifies the UDP socket receive and send buffer sizes..</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='Regkey_TransarcAFSDaemon_Parameters_GlobalAutoMapper'>Regkey:
[HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\Parameters\GlobalAutoMapper]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: &lt;Drive Letter:&gt; for example "G:"</emphasis>
                  </para>
                  <para>Type: REG_SZ</para>
                  <para>Specifies the submount name to be mapped by afsd_service.exe at startup to the provided drive letter.</para>
                  <para>
                    <emphasis>This option is deprecated.</emphasis>
                  </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='Regkey_HKLM_SOFTWARE_OpenAFS_Client'>Regkey: [HKLM\SOFTWARE\OpenAFS\Client]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_CellServDBDir' />
                    <emphasis>Value: CellServDBDir</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: &lt;not defined&gt;</para>
                  <para>Specifies the directory containing the CellServDB file.  When this value is not specified, the ProgramData directory is searched and if the CellServDB file is not found, the AFS Client install directory is used.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_VerifyServiceSignature' />
                    <emphasis>Value: VerifyServiceSignature</emphasis>
                  </para>
                  <para>Type: REG_DWORD
                  </para>
                  <para>
Default: 0x1</para>
                  <para>This value can be used to disable the runtime verification of the digital signatures applied to afsd_service.exe and the OpenAFS DLLs it loads.  This test is performed to verify that   the DLLs which are loaded by afsd_service.exe are from the same distribution as afsd_service.exe.  This is to prevent random errors caused when DLLs from one distribution of AFS are loaded by another one.  This is not a security test.  The reason for disabling this test is to free up additional memory which can be used for a large cache size.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_IoctlDebug' />
                    <emphasis>Value: IoctlDebug</emphasis>
                  </para>
                  <para>Type: REG_DWORD
                  </para>
                  <para>
Default: 0x0</para>
                  <para>This value can be used to debug the cause of pioctl() failures.  Set a non-zero value and the pioctl() library will output status information to stdout.  Executing command line tools such as tokens.exe, fs.exe, etc can then be used to determine why the pioctl() call is failing. </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_MiniDumpType' />
                    <emphasis>Value: MiniDumpType</emphasis>
                  </para>
                  <para>Type: REG_DWORD
                  </para>
                  <para>
Default: 0x0 (MiniDumpNormal)</para>
                  <para>This value is used to specify the type of minidump generated by afsd_service.exe either when the process crashes or when a user initiated is dump file is generated with the "fs.exe minidump" command.</para>
                  <para>Valid values are dependent on the version of DbgHelp.dll installed on the machine.  The best version to use is not the version that comes with the operating system but the version that is included in the most recent release of "
                    <ulink url='http://www.microsoft.com/whdc/devtools/debugging/default.mspx'>Microsoft Debugging Tools for Windows</ulink>".  See the Microsoft Developer Library for further information.
                  
                  
                  
                  </para>
                  <simplelist type='Vert'>
                    <member>
MiniDumpNormal = 0x00000000
      </member>
                    <member>
MiniDumpWithDataSegs = 0x00000001
      </member>
                    <member>
MiniDumpWithFullMemory = 0x00000002
      </member>
                    <member>
MiniDumpWithHandleData = 0x00000004
      </member>
                    <member>
MiniDumpFilterMemory = 0x00000008
      </member>
                    <member>
MiniDumpScanMemory = 0x00000010
      </member>
                    <member>
MiniDumpWithUnloadedModules = 0x00000020
      </member>
                    <member>
MiniDumpWithIndirectlyReferencedMemory = 0x00000040
      </member>
                    <member>
MiniDumpFilterModulePaths = 0x00000080
      </member>
                    <member>
MiniDumpWithProcessThreadData = 0x00000100
      </member>
                    <member>
MiniDumpWithPrivateReadWriteMemory = 0x00000200
      </member>
                    <member>
MiniDumpWithoutOptionalData = 0x00000400
      </member>
                    <member>
MiniDumpWithFullMemoryInfo = 0x00000800
      </member>
                    <member>
MiniDumpWithThreadInfo = 0x00001000
      </member>
                    <member>
MiniDumpWithCodeSegs = 0x00002000
      </member>
                  </simplelist>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_EnableSMBAsyncStore' />
                    <emphasis>Value: EnableSMBAsyncStore</emphasis>
                  </para>
                  <para>Type: REG_DWORD
                  </para>
                  <para>
Default: 0x1</para>
                  <para>This value can be used to disable the use of SMB Asynchronous Store operations. </para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_SMBAsyncStoreSize' />
                    <emphasis>Value: SMBAsyncStoreSize</emphasis>
                  </para>
                  <para>Type: REG_DWORD
                  </para>
                  <para>
Default: 32</para>
                  <para>This value determines the size of SMB Asynchronous Store operations. This value can be used to increase the write performance on higher speed networks by increasing the value.  The value must be a multiple of the cache buffer block size and cannot be larger than the cache manager chunk size.  The specified value will be adjusted to enforce its compliance with these restrictions.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_StoreAnsiFilenames' />
                    <emphasis>Value: StoreAnsiFilenames</emphasis>
                  </para>
                  <para>Type: REG_DWORD
                  </para>
                  <para>
Default: 0x0</para>
                  <para>This value can be used to force the AFS Client Service to store filenames using the Windows system's ANSI character set instead of the OEM Code Page character set which has traditionally been used by SMB file systems.  </para>
                  <para>Note: The use of ANSI characters will render access to files with 8-bit OEM file names inaccessible from Windows.  This option is of use primarily when you wish to allow file names produced on Windows to be accessible from Latin-1 UNIX systems and vice versa.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='Regkey_HKLM_SOFTWARE_OpenAFS_Client_CSCPolicy'>Regkey: [HKLM\SOFTWARE\OpenAFS\Client\CSCPolicy]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: "smb/cifs share name"</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: &lt;none&gt;</para>
                  <para>This key is used to map SMB/CIFS shares to Client Side Caching (off-line access) policies. For each share one of the following policies may be used: "manual", "programs", "documents", "disable".  </para>
                  <para>These values used to be stored in afsdsbmt.ini</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='Regkey_HKLM_SOFTWARE_OpenAFS_Client_Freelance'>Regkey: [HKLM\SOFTWARE\OpenAFS\Client\Freelance]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: "numeric value"</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: &lt;none&gt;</para>
                  <para>This key is used to store dot terminated mount point strings for use in constructing the fake root.afs volume when Freelance (dynamic roots) mode is activated.</para>
                  <para>"athena.mit.edu#athena.mit.edu:root.cell."</para>
                  <para>".athena.mit.edu%athena.mit.edu:root.cell."</para>
                  <para>These values used to be stored in afs_freelance.ini</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='Regkey_HKLM_SOFTWARE_OpenAFS_Client_Freelance_Symlinks'>Regkey: [HKLM\SOFTWARE\OpenAFS\Client\Freelance\Symlinks]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: "numeric value"</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: &lt;none&gt;</para>
                  <para>This key is used to store a dot terminated symlink strings for use in constructing the fake root.afs volume when Freelance (dynamic roots) mode is activated.</para>
                  <para>"linkname:destination-path."</para>
                  <para>"athena:athena.mit.edu."</para>
                  <para>"home:athena.mit.edu\user\j\a\jaltman."</para>
                  <para>"filename:path\file."</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='Regkey_HKLM_SOFTWARE_OpenAFS_Client_Realms'>Regkey: [HKLM\SOFTWARE\OpenAFS\Client\Realms]</title>
        <para>The Realms key is used to provide initialization data to be used when new identities are added to the Network Identity Manager.  The AFS Provider will search for a subkey that matches the realm of the identity.  If such a key exists, its values will be used to populate the AFS configuration for the identity.</para>
      </section>
      <section>
        <title id='Regkey_HKLM_SOFTWARE_OpenAFS_Client_Realms_RealmName'>Regkey: [HKLM\SOFTWARE\OpenAFS\Client\Realms\&quot;Realm Name&quot;]</title>
        <para>In addition to the optional values, this key contains one subkey for each cell that is to be added to the AFS Provider configuration.  </para>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: </emphasis>
                    <emphasis role='bold'>AFSEnabled</emphasis>
                  </para>
                  <para>Type: REG_DWORD
                  </para>
                  <para>
Default: 0x01</para>
                  <para>This key is used to specify whether the new identity should be configured to obtain AFS credentials.  In general, it is only specified when disabling the acquisition of AFS credentials is desired.  The default is to obtain AFS credentials.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='Regkey_HKLM_SOFTWARE_OpenAFS_Client_Realms_RealmName_CellName'>Regkey:
[HKLM\SOFTWARE\OpenAFS\Client\Realms\&quot;Realm Name&quot;\&quot;Cell Name&quot;]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='448pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value:</emphasis>
                    <emphasis role='bold'> MethodName</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: &lt;none&gt;</para>
                  <para>This key is used to specify the token acquisition method to be used.  When unspecified, the AFS provider will automatically try Kerberos v5 and then Kerberos v5 (if available).  As of this writing valid method names include &quot;Auto&quot;, &quot;Kerberos5&quot;, &quot;Kerberos524&quot;, &quot;Kerberos4&quot;.</para>
                  <para>Note: Kerberos524 and Kerberos4 cannot be used with 64-bit Kerberos for Windows.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value:</emphasis>
                    <emphasis role='bold'> Realm</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: &lt;none&gt;</para>
                  <para>This key is used to specify the realm to be used when acquiring AFS tokens.  If not specified, the realm will be determined by performing a domain to realm mapping on the domain of a random volume location database server for the cell.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='Regkey_HKLM_SOFTWARE_OpenAFS_Client_Submounts'>Regkey:
[HKLM\SOFTWARE\OpenAFS\Client\Submounts]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: "submount name"</emphasis>
                  </para>
                  <para>Type: REG_EXPAND_SZ
                  </para>
                  <para>
Default: &lt;none&gt;</para>
                  <para>This key is used to store mappings of UNIX style AFS paths to submount names which can be referenced as UNC paths.  For example the submount string &quot;/athena.mit.edu/user/j/a/jaltman" can be associated with the submount name "jaltman.home".  This can then be referenced as the UNC path \\AFS\jaltman.home.</para>
                  <para>These values used to be stored in afsdsbmt.ini</para>
                  <para>NOTE: Submounts should no longer be used with OpenAFS. Use the Windows Explorer to create drive mappings to AFS UNC paths instead of using the AFS Submount mechanism.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='Regkey_HKLM_SOFTWARE_OpenAFS_Client_ServerPreferences'>Regkey:
[HKLM\SOFTWARE\OpenAFS\Client\Server Preferences\VLDB]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: "hostname or ip address"</emphasis>
                  </para>
                  <para>Type: REG_DWORD
                  </para>
                  <para>
Default: &lt;none&gt;</para>
                  <para>This key is used to specify a default set of VLDB server preferences. For each entry the value name will be either the IP address of a server or a fully qualified domain name.  The value will be the ranking.  The ranking will be adjusted by a random value between 0 and 256 prior to the preference being set.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='Regkey_HKLM_SOFTWARE_OpenAFS_Client_ServerPreferences_File'>Regkey:
[HKLM\SOFTWARE\OpenAFS\Client\Server Preferences\File]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: "hostname or ip address"</emphasis>
                  </para>
                  <para>Type: REG_DWORD
                  </para>
                  <para>
Default: &lt;none&gt;</para>
                  <para>This key is used to specify a default set of File server preferences. For each entry the value name will be either the IP address of a server or a fully qualified domain name.  The value will be the ranking.  The ranking will be adjusted by a random value between 0 and 256 prior to the preference being set.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
    <section>
      <title id='Integrated_Logon_Parameters'>A.2. Integrated Logon Network Provider Parameters</title>
      <para>Affects the network provider (afslogon.dll).</para>
      <section>
        <title id='NP_Regkey_TransarcAFSDaemon_Parameters'>Regkey: [HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\Parameters]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: FailLoginsSilently</emphasis>
                  </para>
                  <para>Type: DWORD
                  </para>
                  <para>
Default: 0</para>
                  <para>Do not display message boxes if the login fails.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='NP_Regkey_TransarcAFSDaemon_NetworkProvider'>Regkey:
[HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: NoWarnings</emphasis>
                  </para>
                  <para>Type: DWORD
                  </para>
                  <para>
Default: 0</para>
                  <para>Disables visible warnings during logon.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: AuthentProviderPath</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
NSIS: %WINDIR%\SYSTEM32\afslogon.dll</para>
                  <para>Specifies the install location of the authentication provider dll.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: Class</emphasis>
                  </para>
                  <para>Type: DWORD
                  </para>
                  <para>
NSIS: 0x02</para>
                  <para>Specifies the class of network provider</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: DependOnGroup</emphasis>
                  </para>
                  <para>Type: REG_MULTI_SZ
                  </para>
                  <para>
NSIS: PNP_TDI</para>
                  <para>Specifies the service groups upon which the AFS Client Service depends.  Windows should not attempt to start the AFS Client Service until all of the services within these groups have successfully started.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: DependOnService</emphasis>
                  </para>
                  <para>Type: REG_MULTI_SZ
                  </para>
                  <para>
NSIS: Tcpip NETBIOS RpcSs</para>
                  <para>Specifies a list of services upon which the AFS Client Service depends.  Windows should not attempt to start the AFS Client Service until all of the specified services have successfully started.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: Name</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
NSIS: "OpenAFSDaemon"</para>
                  <para>Specifies the display name of the AFS Client Service</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: ProviderPath</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
NSIS: %WINDIR%\SYSTEM32\afslogon.dll</para>
                  <para>Specifies the DLL to use for the network provider</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
    <section>
      <title id='Domain_Specific_Configuration'>A.2.1 Domain specific configuration keys for the Network Provider</title>
      <para>The network provider can be configured to have different behavior depending on the domain that the user logs into.  These settings are only relevant when using integrated login.  A domain refers to an Active Directory (AD) domain, a trusted Kerberos (non-AD) realm or the local machine (i.e. local account logins).  The domain name that is used for selecting the domain would be the domain that is passed into the NPLogonNotify function of the network provider.</para>
      <para>Domain specific registry keys are:</para>
      <section>
        <title id='Domain_Regkey_TransarcAFSDaemon_NetworkProvider'>Regkey: [HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider]</title>
        <para>  (NP key)</para>
      </section>
      <section>
        <title id='Domain_Regkey_TransarcAFSDaemon_NetworkProvider_Domain'>Regkey: [HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain]</title>
        <para>  (Domains key)</para>
      </section>
      <section>
        <title id='Domain_Regkey_TransarcAFSDaemon_NetworkProvider_Domain_DomainName'>Regkey: [HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain\"domain name"]</title>
        <para>  (Specific domain key. One per domain.)</para>
      </section>
      <section>
        <title id='Domain_Regkey_TransarcAFSDaemon_NetworkProvider_Domain_LocalHost'>Regkey: [HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain\LOCALHOST]</title>
        <para>  (Localhost key)</para>
      </section>
      <section>
        <title id='Domain_Example'>Domain Specific Example:</title>
        <para> HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider</para>
        <para>  |</para>
        <para>  +- Domain</para>
        <para>     +-AD1.EXAMPLE.COM</para>
        <para>     +-AD2.EXAMPLE.NET</para>
        <para>     +-LOCALHOST</para>
        <para>Each of the domain specific keys can have the set of values described in 2.1.1.  The effective values are chosen as described in 2.1.2.</para>
      </section>
      <section>
        <title id='Domain_Specific_Configuration_Values'>A.2.1.1 Domain Specific Configuration Values</title>
        <section>
          <title id='Domain_Specific_Regkeys'>Regkeys: [HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider]
[HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain]
[HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain\"domain name"]
[HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider\Domain\LOCALHOST]</title>
          <informaltable frame='all'>
            <tgroup rowsep='1' align='left' colsep='1' cols='1'>
              <colspec colwidth='447pt' colname='c1' />
              <tbody>
                <row>
                  <entry>
                    <para>
                      <anchor id='Value_LogonOptions' />
                      <emphasis>Value: LogonOptions</emphasis>
                    </para>
                    <para>Type: DWORD
                  </para>
                    <para>
Default: 0x01</para>
                    <para>NSIS/WiX: depends on user configuration</para>
                    <para>
                      <simplelist>
                        <member>0x00 - Integrated Logon is not used
</member>
                        <member>
0x01 - Integrated Logon is used
</member>
                        <member>
0x02 - High Security Mode is used (deprecated)
</member>
                        <member>
0x03 - Integrated Logon with High Security Mode is used (deprecated)
</member>
                      </simplelist>
                    </para>
                    <para>High Security Mode generates random SMB names for the creation of Drive Mappings.  This mode should not be used without Integrated Logon.</para>
                    <para>As of 1.3.65 the SMB server supports SMB authentication.  The High Security Mode should not be used when using SMB authentication (SMBAuthType setting is non zero).</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
                      <emphasis>Value: FailLoginsSilentl</emphasis>
                    </para>
                    <para>Type: DWORD (1|0)
                  </para>
                    <para>
Default: 0
                  </para>
                    <para>
NSIS/WiX: (not set)</para>
                    <para>If true, does not display any visible warnings in the event of an error during the integrated login process.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
                      <emphasis>Value: LogonScript</emphasis>
                    </para>
                    <para>Type: REG_SZ or REG_EXPAND_SZ
                  </para>
                    <para>
Default: (null)
                  </para>
                    <para>
NSIS/WiX: (only value under NP key) &lt;install path&gt;\afscreds.exe -:%s -x -a -m -n -q</para>
                    <para>A logon script that will be scheduled to be run after the profile load is complete.  If using the REG_EXPAND_SZ type, you can use any system environment variable as "%varname%" which would be expanded at the time the network provider is run.  Optionally using a "%s" in the value would result in it being expanded into the AFS SMB username for the session.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
                      <emphasis>Value: LoginRetryInterval</emphasis>
                    </para>
                    <para>Type: DWORD
                  </para>
                    <para>
Default: 30
                  </para>
                    <para>
NSIS/WiX: (not set)</para>
                    <para>If the OpenAFS client service has not started yet, the network provider will wait for a maximum of "LoginRetryInterval" seconds while retrying every "LoginSleepInterval" seconds to check if the service is up.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
                      <emphasis>Value: LoginSleepInterval</emphasis>
                    </para>
                    <para>Type: DWORD
                  </para>
                    <para>
Default: 5
                  </para>
                    <para>
NSIS/WiX: (not set)</para>
                    <para>See description of LoginRetryInterval.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
                      <anchor id='Value_Realm' />
                      <emphasis>Value: Realm</emphasis>
                    </para>
                    <para>Type: REG_SZ
                  </para>
                    <para>
NSIS: &lt;not set&gt;</para>
                    <para>When Kerberos v5 is being used, Realm specifies the Kerberos v5 realm that should be appended to the first component of the Domain logon username to construct the Kerberos v5 principal for which AFS tokens should be obtained.</para>
                  </entry>
                </row>
                <row>
                  <entry>
                    <para>
                      <anchor id='Value_TheseCells' />
                      <emphasis>Value: TheseCells</emphasis>
                    </para>
                    <para>Type: REG_MULTI_SZ
                  </para>
                    <para>
NSIS: &lt;not set&gt;</para>
                    <para>When Kerberos v5 is being used, TheseCells provides a list of additional cells for which tokens should be obtained with the default Kerberos v5 principal.</para>
                  </entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>
        </section>
      </section>
      <section>
        <title id='Selection_Effective_Values_for_Domain_Specific_Configuration'>A.2.1.2 Selection of effective values for domain specific configuration</title>
        <para>During login to domain X, where X is the domain passed into NPLogonNotify as lpAuthentInfo-&gt;LogonDomainName or the string 'LOCALHOST' if lpAuthentInfo-&gt;LogonDomainName equals the name of the computer, the following keys will be looked up.</para>
        <para>1.      NP key. ("HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\NetworkProvider")</para>
        <para>2.      Domains key. (NP key\"Domain")</para>
        <para>3.      Specific domain key. (Domains key\X)</para>
        <para>If the specific domain key does not exist, then the domains key will be ignored.  All the configuration information in this case will come from the NP key.</para>
        <para>If the specific domain key exists, then for each of the values metioned in (2), they will be looked up in the specific domain key, domains key and the NP key successively until the value is found. The first instance of the value found this way will be the effective for the login session.  If no such instance can be found, the default will be used.  To re-iterate, a value in a more specific key supercedes a value in a less specific key.  The exceptions to this rule are stated below.</para>
      </section>
      <section>
        <title id='Domain_Specific_Configuration_Exceptions'>A.2.1.3 Exceptions to A.2.1.2</title>
        <para>To retain backwards compatibility, the following exceptions are made to A.2.1.2.</para>
        <section>
          <title id='Domain_Specific_Configuration_Exception_FailLoginsSilently'>2.1.3.1 'FailLoginsSilently'</title>
          <para>Historically, the 'FailLoginsSilently' value was in HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\Parameters key and not in the NP key.  Therefore, for backwards compatibility, the value in the Parameters key will supercede all instances of this value in other keys.  In the absence of this value in the Parameters key, normal scope rules apply.</para>
        </section>
        <section>
          <title id='Domain_Specific_Configuration_Exception_LogonScript'>2.1.3.2 'LogonScript'</title>
          <para>If a 'LogonScript' is not specified in the specific domain key nor in the domains key, the value in the NP key will only be checked if the effective 'LogonOptions' specify a high security integrated login.  If a logon script is specified in the specific domain key or the domains key, it will be used regardless of the high security setting.  Please be aware of this when setting this value.</para>
        </section>
      </section>
    </section>
    <section>
      <title id='AFSCreds_Parameters'>A.3. AFS Credentials System Tray Tool parameters</title>
      <para>Affects the behavior of afscreds.exe</para>
      <section>
        <title id='AFSCreds_Regkey_TransarcAFSDaemon_Parameters'>Regkey:
[HKLM\SYSTEM\CurrentControlSet\Services\TransarcAFSDaemon\Parameters]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: Gateway</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: ""
                  </para>
                  <para>
Function: GetGatewayName()</para>
                  <para>If the AFS client is utilizing a gateway to obtain AFS access, the name of the gateway is specified by this value.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: Cell</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: &lt;none&gt;
                  </para>
                  <para>
Variable: IsServiceConfigured()</para>
                  <para>The value Cell is used to determine if the AFS Client Service has been properly configured or not.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='AFSCreds_Regkey_Software_OpenAFS_Client'>Regkey:
[HKLM\SOFTWARE\OpenAFS\Client]
[HKCU\SOFTWARE\OpenAFS\Client]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: ShowTrayIcon</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 1
                  </para>
                  <para>
Function: InitApp(), Main_OnCheckTerminate()</para>
                  <para>This value is used to determine whether or not a shortcut should be maintained in the user's Start Menu-&gt;Programs-&gt;Startup folder. </para>
                  <para>This value used to be stored at [HKLM\Software\TransarcCorporation\AFS Client\AfsCreds].</para>
                  <para>The current user value is checked first; if it does not exist the local machine value is checked.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para id='EnableKFW'>
                    <emphasis>Value: EnableKFW</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 1
                  </para>
                  <para>
Function: KFW_is_available()</para>
                  <para>When MIT Kerberos for Windows can be loaded, Kerberos v5 will be used to obtain AFS credentials.  By setting this value to 0, the internal Kerberos v4 implementation will be used instead.  The current user value is checked first; if it does not exist the local machine value is checked.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: AcceptDottedPrincipalNames</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 1
                  </para>
                  <para>
Function: KFW_accept_dotted_usernames()</para>
                  <para>Kerberos v5 principal names are traditionally mapped to Kerberos v4 names by the AFS servers before they can be looked up in the Protection database.  The mapping algorithm used permits collisions to occur.  Both of the Kerberos v5 names, "user.admin@REALM" and "user/admin@REALM" are interpreted as the same user identity within the cell.  To enable both names to be sent to the server by AFSCreds or Integrated Logon, set this value to 1.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_Use524' />
                    <emphasis>Value: Use524</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: 0
                  </para>
                  <para>
Function: KFW_use_krb524()</para>
                  <para>When MIT Kerberos for Windows can be loaded, Kerberos v5 will be used to obtain AFS credentials.  By setting this value to 1, the Kerberos v5 tickets will be converted to Kerberos v4 tokens via a call to the krb524 daemon.  The current user value is checked first; if it does not exist the local machine value is checked.</para>
                </entry>
              </row>
              <row>
                <entry>
                  <para>
                    <anchor id='Value_AfscredsShortcutParams' />
                    <emphasis>Value: AfscredsShortcutParams</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: "-A -M -N -Q"
                  </para>
                  <para>
Function: Shortcut_FixStartup</para>
                  <para>This value specifies the command line options which should be set as part of the shortcut to afscreds.exe.  afscreds.exe rewrites the shortcut each time it exits so as to ensure that the shortcut points to the latest version of the program.  This value is used to determine which values should be used for command line parameters.  The current user value is checked first; if it does not exist the local machine value is checked.</para>
                  <para>The following subset of the command line options is appropriate for use in this registry setting:</para>
                  <para>
                    <simplelist>
                      <member>-A = autoinit
</member>
                      <member>
-M = renew drive maps
</member>
                      <member>
-N = ip address change detection
</member>
                      <member>
-Q = quiet mode.  do not display start service dialog if afsd_service is not already running
</member>
                      <member>
-S = show tokens dialog on startup
</member>
                      <member>
-Z = unmap drives
</member>
                    </simplelist>
                  </para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='AFSCreds_Regkey_HKCU_Software_OpenAFS_Client'>Regkey:
[HKCU\SOFTWARE\OpenAFS\Client]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: Authentication Cell</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: &lt;none&gt;
                  </para>
                  <para>
Function: Afscreds.exe GetDefaultCell()</para>
                  <para>This value allows the user to configure a different cell name to be used as the default cell when acquiring tokens in afscreds.exe.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='AFSCreds_Regkey_HKCU_Software_OpenAFS_Client_Reminders'>Regkey:
[HKCU\SOFTWARE\OpenAFS\Client\Reminders]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: "afs cell name"</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: &lt;none&gt;
                  </para>
                  <para>
Function: LoadRemind(), SaveRemind()</para>
                  <para>These values are used to save and restore the state of the reminder flag for each cell for which the user has obtained tokens.</para>
                  <para>This value used to be stored at [HKLM\Software\TransarcCorporation\AFS Client\AfsCreds].</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='AFSCreds_Regkey_HKCU_Software_OpenAFS_Client_ActiveMaps'>Regkey:
[HKCU\SOFTWARE\OpenAFS\Client\Active Maps]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: "upper case drive letter"</emphasis>
                  </para>
                  <para>Type: DWORD {0, 1}
                  </para>
                  <para>
Default: &lt;none&gt;</para>
                  <para>These values are used to store the persistence state of the AFS drive mappings as listed in the [...\Client\Mappings] key.</para>
                  <para>These values used to be stored in the afsdsbmt.ini file</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title id='AFSCreds_Regkey_HKCU_Software_OpenAFS_Client_Mappings'>Regkey:
[HKCU\SOFTWARE\OpenAFS\Client\Mappings]</title>
        <informaltable frame='all'>
          <tgroup rowsep='1' align='left' colsep='1' cols='1'>
            <colspec colwidth='447pt' colname='c1' />
            <tbody>
              <row>
                <entry>
                  <para>
                    <emphasis>Value: "upper case drive letter"</emphasis>
                  </para>
                  <para>Type: REG_SZ
                  </para>
                  <para>
Default: &lt;none&gt;</para>
                  <para>These values are used to store the AFS path in UNIX notation to which the drive letter is to be mapped.</para>
                  <para>These values used to be stored in the afsdsbmt.ini file.</para>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
    <section>
      <title id='OpenAFS_Service_Environment_Variables'>A.4 OpenAFS Client Service Environment Variables</title>
      <informaltable frame='all'>
        <tgroup rowsep='1' align='left' colsep='1' cols='1'>
          <colspec colwidth='447pt' colname='c1' />
          <tbody>
            <row>
              <entry>
                <para>
                  <emphasis>Variable: AFS_RPC_ENCRYPT</emphasis>
                </para>
                <para>Values:
                  <simplelist>
                    <member> "OFF" disables the use of RPC encryption </member>
                    <member>any other value allows RPC encryption to be used</member>
                  </simplelist>
                </para>
                <para>
Default: RPC encryption is on
                </para>
              </entry>
            </row>
            <row>
              <entry>
                <para>
                  <emphasis>Variable: AFS_RPC_PROTSEQ</emphasis>
                </para>
                <para>Values:
                  <simplelist>
                    <member>
"ncalrpc" - local RPC
</member>
                    <member>
"ncacn_np" - named pipes
</member>
                    <member>
"ncacn_ip_tcp" - tcp/ip
</member>
                  </simplelist>
                </para>
                <para>
Default: local RPC
                </para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para> </para>
    </section>
  </chapter>
  <index>Name Index</index>
</book>
<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:nil
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:nil
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
  -->
